openapi: 3.0.2
info:
  title: Monite internal Partner API soem tyypo
  version: '2022-07-27'
  description: The Monite Internal REST API, for Monite partners to integrate with our solution tyypoo.
  termsOfService: https://monite.com/terms/
  contact:
    name: Monite team
    url: https://monite.com/about/
    email: hello@monite.com
servers:
  - url: http://api.sandbox.monite.com/v1
    description: Sandbox environment
  - url: https://api.monite.com/v1
    description: Production environment
tags:
  - name: Authentication
  - name: Entities and users
  - name: Payables
  - name: Receivables
  - name: Payments
  - name: Mail
  - name: Events
paths:
  /internal_accounts:
    post:
      tags:
        - Payments
      summary: Create Onboarding Account tyypor
      operationId: create_onboarding_account_v1_accounts_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLinkResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
  /accountss\{account_id}:
    get:
      tags:
        - Payments
      summary: Get Account By Id
      operationId: get_account_by_id_v1_accounts__account_id__get
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
    delete:
      tags:
        - Payments
      summary: Delete Account
      operationId: delete_account_v1_accounts__account_id__delete
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
    patch:
      tags:
        - Payments
      summary: Update Account
      operationId: update_account_v1_accounts__account_id__patch
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
  /APPROVAls:
    get:
      tags:
        - Payables
      summary: Get All Pending Approvals
      description: Get all pending approvals
      operationId: get_all_pending_approvals_approvals_get
      parameters:
        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: 'Sort order: `asc` (ascending) or `desc` (descending).'
            default: asc
          name: order
          in: query
        - description: The maximum number of results to return per page.
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: The maximum number of results to return per page.
            default: 100
          name: limit
          in: query
        - description: The maximum number of results to return per page.
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: The maximum number of results to return per page.
            default: 100
          name: internal_id
          in: query
        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          required: false
          schema:
            title: Pagination Token
            type: string
            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          name: pagination_token
          in: query
        - description: The field by which the results will be sorted.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__approvals__pagination__CursorFields'
            description: The field by which the results will be sorted.
          name: sort
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ObjectType'
          name: object_type
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ApprovalStatusEnum'
          name: status
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApprovalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /approvals/{approval_id}:
    get:
      tags:
        - Payables
      summary: Get Approval By Id
      description: Get approval details by ID
      operationId: get_approval_by_id_approvals__approval_id__get
      parameters:
        - required: true
          schema:
            title: Approval Id
            type: string
            format: uuid
          name: approval_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /approvals/{approval_id}/approve:
    post:
      tags:
        - Payables
      summary: Approve
      description: Approve approval
      operationId: approve_approvals__approval_id__approve_post
      parameters:
        - required: true
          schema:
            title: Approval Id
            type: string
            format: uuid
          name: approval_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /approvals/{approval_id}/reject:
    post:
      tags:
        - Payables
      summary: Reject
      description: Reject approval
      operationId: reject_approvals__approval_id__reject_post
      parameters:
        - required: true
          schema:
            title: Approval Id
            type: string
            format: uuid
          name: approval_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /auth//revoke_private:
    post:
      tags:
        - Authentication
      summary: Revoke Token
      operationId: revoke_token_v1_auth_revoke_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeTokenPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
  /auth/token:
    post:
      tags:
        - Authentication
      summary: Obtain New Token
      operationId: obtain_new_token_v1_auth_token_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObtainTokenPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
  /banky_accounts:
    get:
      tags:
        - Entities and users
      summary: Get Entity Bank Accounts
      description: Get entity bank accounts
      operationId: get_entity_bank_accounts_v1_bank_accounts_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityBankAccountPaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Entities and users
      summary: Create Entity Bank Account
      description: Create a new entity bank account
      operationId: create_entity_bank_account_v1_bank_accounts_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityBankAccountRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityBankAccountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /bank_accounts/{entity_bank_account_id}:
    get:
      tags:
        - Entities and users
      summary: Get Entity Bank Account
      description: Get entity bank account
      operationId: get_entity_bank_account_v1_bank_accounts__entity_bank_account_id__get
      parameters:
        - required: true
          schema:
            title: Entity Bank Account Id
            type: string
            format: uuid
          name: entity_bank_account_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityBankAccountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Entities and users
      summary: Delete Entity Bank Account
      description: Delete entity bank account
      operationId: delete_entity_bank_account_v1_bank_accounts__entity_bank_account_id__delete
      parameters:
        - required: true
          schema:
            title: Entity Bank Account Id
            type: string
            format: uuid
          name: entity_bank_account_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Delete Entity Bank Account V1 Bank Accounts  Entity Bank Account Id  Delete
                type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Entities and users
      summary: Update Entity Bank Account
      description: Update entity bank account
      operationId: update_entity_bank_account_v1_bank_accounts__entity_bank_account_id__patch
      parameters:
        - required: true
          schema:
            title: Entity Bank Account Id
            type: string
            format: uuid
          name: entity_bank_account_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntityBankAccountRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityBankAccountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /api/comments/{comment_id}:
    get:
      tags:
        - Payables
      summary: Get Comment By Id
      description: Get comment
      operationId: get_comment_by_id_comments__comment_id__get
      parameters:
        - required: true
          schema:
            title: Comment Id
            type: string
            format: uuid
          name: comment_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action {action} for {object_type} not allowed`,`Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}``{operation}: status has not changed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Payables
      summary: Update Comment By Id
      description: Update comment
      operationId: update_comment_by_id_comments__comment_id__patch
      parameters:
        - required: true
          schema:
            title: Comment Id
            type: string
            format: uuid
          name: comment_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateCommentSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action {action} for {object_type} not allowed`,`Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}``{operation}: status has not changed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /comments/{object_type}/{object_id}:
    get:
      tags:
        - Payables
      summary: Get Comments
      description: Get comments
      operationId: get_comments_comments__object_type___object_id__get
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/ObjectTypeAvailableComment'
          name: object_type
          in: path
        - required: true
          schema:
            title: Object Id
            type: string
            format: uuid
          name: object_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Comments Comments  Object Type   Object Id  Get
                type: array
                items:
                  $ref: '#/components/schemas/CommentSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action {action} for {object_type} not allowed`,`Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}``{operation}: status has not changed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Payables
      summary: Create New Comment
      description: Create new comment
      operationId: create_new_comment_comments__object_type___object_id__post
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/ObjectTypeAvailableComment'
          name: object_type
          in: path
        - required: true
          schema:
            title: Object Id
            type: string
            format: uuid
          name: object_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateCommentSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Could not notify groups: {not_valid_recipients}. Recipients dont exists`,`groups with ids: {'',''.join(missed_ids)} dont exists`,`Could not notify groups: {missed_groups}. Only {available_groups} are available`,`Action {action} for {object_type} not allowed`,`Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}``{operation}: status has not changed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /commercial_conditions:
    get:
      tags:
        - Receivables
      summary: Get All Commercial Conditions
      description: get all commercial conditions
      operationId: get_all_commercial_conditions_v1_commercial_conditions_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateCommentSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All Commercial Conditions V1 Commercial Conditions Get
                type: array
                items:
                  $ref: '#/components/schemas/CommercialConditionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Add Commercial Condition
      description: create commercial condition
      operationId: add_commercial_condition_v1_commercial_conditions_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommercialConditionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercialConditionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /get_commercial_conditions/{commercial_condition_id}:
    get:
      tags:
        - Receivables
      summary: Get Commercial Condition
      description: get commercial condition
      operationId: get_commercial_condition_v1_commercial_conditions__commercial_condition_id__get
      parameters:
        - required: true
          schema:
            title: Commercial Condition Id
            type: string
            format: uuid
          name: commercial_condition_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercialConditionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    put:
      tags:
        - Receivables
      summary: Update Commercial Condition
      description: update commercial condition
      operationId: update_commercial_condition_v1_commercial_conditions__commercial_condition_id__put
      parameters:
        - required: true
          schema:
            title: Commercial Condition Id
            type: string
            format: uuid
          name: commercial_condition_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommercialConditionUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommercialConditionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      description: update commercial condition
      operationId: delete_commercial_condition_v1_commercial_conditions__commercial_condition_id__delete
      parameters:
        - required: true
          schema:
            title: Commercial Condition Id
            type: string
            format: uuid
          name: commercial_condition_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: MoniteEntityId
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateCommentSchema'
        required: true
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /contents.xml:
    get:
      tags:
        - Mail
      summary: Get All
      description: Get all custom contents
      operationId: get_all_v1_contents_get
      parameters:
        - description: Document type of content
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/DocumentObjectTypeEnum'
            description: Document type of content
          name: document_type
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid4
          example: a4e9a453-70f4-48b6-ac83-47350e7b993c
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All V1 Contents Get
                type: array
                items:
                  $ref: '#/components/schemas/ContentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Mail
      summary: Create
      description: Create custom content
      operationId: create_v1_contents_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: a4e9a453-70f4-48b6-ac83-47350e7b993c
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContentRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /contents/subject_body_template/{document_type}:
    get:
      tags:
        - Mail
      summary: Get Subject Body Template
      description: Subject_Body Template
      operationId: get_subject_body_template_v1_contents_subject_body_template__document_type__get
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/DocumentObjectTypeEnum'
          name: document_type
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: a4e9a453-70f4-48b6-ac83-47350e7b993c
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContentRequest'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /contents/{content_id}:
    get:
      tags:
        - Mail
      summary: Get
      description: Get custom content by ID
      operationId: get_v1_contents__content_id__get
      parameters:
        - required: true
          schema:
            title: Content Id
            type: string
            format: uuid
          name: content_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: a4e9a453-70f4-48b6-ac83-47350e7b993c
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Mail
      summary: Delete
      description: Delete custom content by ID
      operationId: delete_v1_contents__content_id__delete
      parameters:
        - required: true
          schema:
            title: Content Id
            type: string
            format: uuid
          name: content_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: a4e9a453-70f4-48b6-ac83-47350e7b993c
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Mail
      summary: Update
      description: Update custom content by ID
      operationId: update_v1_contents__content_id__patch
      parameters:
        - required: true
          schema:
            title: Content Id
            type: string
            format: uuid
          name: content_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: a4e9a453-70f4-48b6-ac83-47350e7b993c
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContentRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /counterparts:
    get:
      tags:
        - Receivables
      summary: Get Counterparts
      operationId: get_counterparts_v1_counterparts_get
      parameters:
        - description: The IBAN of the entity’s bank account.
          required: false
          schema:
            title: Iban
            maxLength: 34
            type: string
            description: The IBAN of the entity’s bank account.
          name: iban
          in: query
        - description: Order by
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: Order by
            default: asc
          name: order
          in: query
        - description: Max is 100
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: Max is 100
            default: 100
          name: limit
          in: query
        - description: A token, obtained from previous page. Prior over other filters
          required: false
          schema:
            title: Pagination Token
            type: string
            description: A token, obtained from previous page. Prior over other filters
          name: pagination_token
          in: query
        - description: Allowed sort fields
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__counterparts__pagination__CursorFields'
            description: Allowed sort fields
          name: sort
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/CounterpartType'
          name: type
          in: query
        - required: false
          schema:
            title: Counterpart Name
            type: string
          name: counterpart_name
          in: query
        - required: false
          schema:
            title: Counterpart Name  Contains
            type: string
          name: counterpart_name__contains
          in: query
        - required: false
          schema:
            title: Counterpart Name  Icontains
            type: string
          name: counterpart_name__icontains
          in: query
        - required: false
          schema:
            title: Is Vendor
            type: boolean
          name: is_vendor
          in: query
        - required: false
          schema:
            title: Is Customer
            type: boolean
          name: is_customer
          in: query
        - required: false
          schema:
            title: Email
            type: string
          name: email
          in: query
        - required: false
          schema:
            title: Email  Contains
            type: string
          name: email__contains
          in: query
        - required: false
          schema:
            title: Email  Icontains
            type: string
          name: email__icontains
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartPaginationResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create New Counterpart
      operationId: create_new_counterpart_v1_counterparts_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartCreatePayload'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /counterparts/{counterpart_id}:
    get:
      tags:
        - Receivables
      summary: Get Counterpart By Id
      operationId: get_counterpart_by_id_v1_counterparts__counterpart_id__get
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Receivables
      summary: Delete Counterpart By Id
      operationId: delete_counterpart_by_id_v1_counterparts__counterpart_id__delete
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Receivables
      summary: Update Counterpart
      operationId: update_counterpart_v1_counterparts__counterpart_id__patch
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartUpdatePayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /counterparts/{counterpart_id}/bank_accounts:
    get:
      tags:
        - Receivables
      summary: Get Counterparts Bank Accounts
      operationId: get_counterparts_bank_accounts_v1_counterparts__counterpart_id__bank_accounts_get
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Counterparts Bank Accounts V1 Counterparts  Counterpart Id  Bank Accounts Get
                type: array
                items:
                  $ref: '#/components/schemas/CounterpartBankAccountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create Counterparts Bank Account
      operationId: create_counterparts_bank_account_v1_counterparts__counterpart_id__bank_accounts_post
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartBankAccount'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartBankAccountResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /counterparts/{counterpart_id}/bank_accounts/{bank_account_id}:
    get:
      tags:
        - Receivables
      summary: Get Counterparts Bank Accounts By Id
      operationId: get_counterparts_bank_accounts_by_id_v1_counterparts__counterpart_id__bank_accounts__bank_account_id__get
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - required: true
          schema:
            title: Bank Account Id
            type: string
            format: uuid
          name: bank_account_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartBankAccountResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Receivables
      summary: Delete Counterpart Bank Account By Id
      operationId: delete_counterpart_bank_account_by_id_v1_counterparts__counterpart_id__bank_accounts__bank_account_id__delete
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - required: true
          schema:
            title: Bank Account Id
            type: string
            format: uuid
          name: bank_account_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Receivables
      summary: Update Counterparts Bank Account
      operationId: update_counterparts_bank_account_v1_counterparts__counterpart_id__bank_accounts__bank_account_id__patch
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - required: true
          schema:
            title: Bank Account Id
            type: string
            format: uuid
          name: bank_account_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterpartBankAccount'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartBankAccountResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /counterparts/{counterpart_id}/contacts:
    get:
      tags:
        - Receivables
      summary: Get Counterpart Contacts
      operationId: get_counterpart_contacts_v1_counterparts__counterpart_id__contacts_get
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Counterpart Contacts V1 Counterparts  Counterpart Id  Contacts Get
                type: array
                items:
                  $ref: '#/components/schemas/CounterpartContactResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create Counterpart Contacts
      operationId: create_counterpart_contacts_v1_counterparts__counterpart_id__contacts_post
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCounterpartContactPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartContactResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /counterparts/{counterpart_id}/contacts/{contact_id}:
    get:
      tags:
        - Receivables
      summary: Get Counterpart Contact By Id
      operationId: get_counterpart_contact_by_id_v1_counterparts__counterpart_id__contacts__contact_id__get
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - required: true
          schema:
            title: Contact Id
            type: string
            format: uuid
          name: contact_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartContactResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Receivables
      summary: Delete Counterpart Contact By Id
      operationId: delete_counterpart_contact_by_id_v1_counterparts__counterpart_id__contacts__contact_id__delete
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - required: true
          schema:
            title: Contact Id
            type: string
            format: uuid
          name: contact_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Receivables
      summary: Update Counterpart Contact By Id
      operationId: update_counterpart_contact_by_id_v1_counterparts__counterpart_id__contacts__contact_id__patch
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - required: true
          schema:
            title: Contact Id
            type: string
            format: uuid
          name: contact_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCounterpartContactPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartContactResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /counterparts/{counterpart_id}/contacts/{contact_id}/make_default:
    patch:
      tags:
        - Receivables
      summary: Make Default Counterpart Contacts By Id
      operationId: make_default_counterpart_contacts_by_id_v1_counterparts__counterpart_id__contacts__contact_id__make_default_patch
      parameters:
        - required: true
          schema:
            title: Counterpart Id
            type: string
            format: uuid
          name: counterpart_id
          in: path
        - required: true
          schema:
            title: Contact Id
            type: string
            format: uuid
          name: contact_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartContactResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /data_exports:
    get:
      tags:
        - Payables
      summary: Get All
      operationId: get_all_data_exports_get
      parameters:
        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: 'Sort order: `asc` (ascending) or `desc` (descending).'
            default: asc
          name: order
          in: query
        - description: The maximum number of results to return per page.
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: The maximum number of results to return per page.
            default: 100
          name: limit
          in: query
        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          required: false
          schema:
            title: Pagination Token
            type: string
            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          name: pagination_token
          in: query
        - description: The field by which the results will be sorted.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__export__pagination__CursorFields'
            description: The field by which the results will be sorted.
          name: sort
          in: query
        - required: false
          schema:
            title: Created By Entity User Id
            type: string
            format: uuid
          name: created_by_entity_user_id
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Payables
      summary: Add Document Export
      operationId: add_document_export_data_exports_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportPayloadSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExportTaskResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Not all statuses are available: {missed_statuses}. Available ones: {object_statuses},`{missed_objects} are not allowed. Available only {objects}`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /data_exports/supported_formats:
    get:
      tags:
        - Payables
      summary: Get Supported Export Formats
      operationId: get_supported_export_formats_data_exports_supported_formats_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Supported Export Formats Data Exports Supported Formats Get
                type: array
                items:
                  $ref: '#/components/schemas/SupportedFormatSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /data_exports/{id}:
    get:
      tags:
        - Payables
      summary: Get Document Export By Id
      operationId: get_document_export_by_id_data_exports__id__get
      parameters:
        - required: true
          schema:
            title: Id
            type: string
            format: uuid
          name: id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentExportResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /document_templates:
    get:
      tags:
        - Mail
      summary: Get Document Templates
      description: 'This API call returns all supported templates with language codes. '
      operationId: get_document_templates_v1_document_templates_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /document_templates/{document_template_id}:
    get:
      tags:
        - Mail
      summary: Get Document Template By Id
      operationId: get_document_template_by_id_v1_document_templates__document_template_id__get
      parameters:
        - required: true
          schema:
            title: Document Template Id
            type: string
            format: uuid
          name: document_template_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /entities:
    get:
      tags:
        - Entities and users
      summary: Get Entities
      operationId: get_entities_v1_entities_get
      parameters:
        - description: Order by
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: Order by
            default: asc
          name: order
          in: query
        - description: Max is 100
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: Max is 100
            default: 100
          name: limit
          in: query
        - description: A token, obtained from previous page. Prior over other filters
          required: false
          schema:
            title: Pagination Token
            type: string
            description: A token, obtained from previous page. Prior over other filters
          name: pagination_token
          in: query
        - description: Allowed sort fields
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__entities__pagination__CursorFields'
            description: Allowed sort fields
          name: sort
          in: query
        - required: false
          schema:
            title: Name
            type: string
          name: name
          in: query
        - required: false
          schema:
            title: Internal Id
            type: string
          name: internal_id
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/EntityTypeEnum'
          name: type
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityPaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Entities and users
      summary: Create Entity
      operationId: create_entity_v1_entities_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntityRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /entities/{entity_id}:
    get:
      tags:
        - Entities and users
      summary: Get Entity By Id
      operationId: get_entity_by_id_v1_entities__entity_id__get
      parameters:
        - required: true
          schema:
            title: Entity Id
            type: string
            format: uuid
          example: e8365da9-d35a-473b-9404-9403a7ab864d
          name: entity_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Entities and users
      summary: Update Entity By Id
      operationId: update_entity_by_id_v1_entities__entity_id__patch
      parameters:
        - required: true
          schema:
            title: Entity Id
            type: string
            format: uuid
          example: df67899b-6b0d-4860-9c65-4dba78f2f275
          name: entity_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntityRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /entities/{entity_id}/settings:
    get:
      tags:
        - Entities and users
      summary: Get Entity Settings
      operationId: get_entity_settings_v1_entities__entity_id__settings_get
      parameters:
        - required: true
          schema:
            title: Entity Id
            type: string
            format: uuid
          example: f9b3ec50-fac1-4473-844f-98868420f95d
          name: entity_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Entities and users
      summary: Patch Entity Settings
      operationId: patch_entity_settings_v1_entities__entity_id__settings_patch
      parameters:
        - required: true
          schema:
            title: Entity Id
            type: string
            format: uuid
          example: 9e67ade9-676a-4375-aa54-4fa884ff8873
          name: entity_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSettingsPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SettingsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /entity_users:
    get:
      tags:
        - Entities and users
      summary: Get Entity Users
      operationId: get_entity_users_v1_entity_users_get
      parameters:
        - description: Order by
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: Order by
            default: asc
          name: order
          in: query
        - description: Max is 100
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: Max is 100
            default: 100
          name: limit
          in: query
        - description: A token, obtained from previous page. Prior over other filters
          required: false
          schema:
            title: Pagination Token
            type: string
            description: A token, obtained from previous page. Prior over other filters
          name: pagination_token
          in: query
        - description: Allowed sort fields
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__entity_users__pagination__CursorFields'
            description: Allowed sort fields
          name: sort
          in: query
        - required: false
          schema:
            title: First Name
            type: string
          name: first_name
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserPaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Entities and users
      summary: Create Entity User
      operationId: create_entity_user_v1_entity_users_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntityUserRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /entity_users/search:
    post:
      tags:
        - Entities and users
      summary: Search Entity User
      operationId: search_entity_user_v1_entity_users_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntitiesPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Search Entity User V1 Entity Users Search Post
                type: array
                items:
                  $ref: '#/components/schemas/EntityUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /entity_users/{entity_user_id}:
    get:
      tags:
        - Entities and users
      summary: Get Entity User By Id
      operationId: get_entity_user_by_id_v1_entity_users__entity_user_id__get
      parameters:
        - required: true
          schema:
            title: Entity User Id
            type: string
            format: uuid
          name: entity_user_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 206fbbe7-f795-4f60-b95e-f7b99bd34d54
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Entities and users
      summary: Update Entity User By Id
      operationId: update_entity_user_by_id_v1_entity_users__entity_user_id__patch
      parameters:
        - required: true
          schema:
            title: Entity User Id
            type: string
            format: uuid
          name: entity_user_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 206fbbe7-f795-4f60-b95e-f7b99bd34d54
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntityUserRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mail_templates:
    get:
      tags:
        - Mail
      summary: Get All
      description: Get all custom templates
      operationId: get_all_v1_mail_templates_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All V1 Mail Templates Get
                type: array
                items:
                  $ref: '#/components/schemas/CustomTemplateDataSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Mail
      summary: Create
      description: Create custom template
      operationId: create_v1_mail_templates_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCustomTemplateSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTemplateDataSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mail_templates/system:
    get:
      tags:
        - Mail
      summary: Get All System Templates
      description: Get all system templates
      operationId: get_all_system_templates_v1_mail_templates_system_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get All System Templates V1 Mail Templates System Get
                type: array
                items:
                  $ref: '#/components/schemas/SystemTemplateDataSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mail_templates/{template_id}:
    get:
      tags:
        - Mail
      summary: Get
      description: Get custom template by ID
      operationId: get_v1_mail_templates__template_id__get
      parameters:
        - required: true
          schema:
            title: Template Id
            type: string
            format: uuid
          name: template_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTemplateDataSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Mail
      summary: Delete
      description: Delete custom template bt ID
      operationId: delete_v1_mail_templates__template_id__delete
      parameters:
        - required: true
          schema:
            title: Template Id
            type: string
            format: uuid
          name: template_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTemplateDataSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Mail
      summary: Update
      description: Update custom template by ID
      operationId: update_v1_mail_templates__template_id__patch
      parameters:
        - required: true
          schema:
            title: Template Id
            type: string
            format: uuid
          name: template_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomTemplateSchemaRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTemplateDataSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mailbox_domains:
    get:
      tags:
        - Mail
      summary: Get Domains
      description: Get all domains owned by partner_id
      operationId: get_domains_v1_mailbox_domains_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Mail
      summary: Create Domain
      description: Create domain for the partner_id
      operationId: create_domain_v1_mailbox_domains_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mailbox_domains/{domain_id}:
    delete:
      tags:
        - Mail
      summary: Delete Domain
      description: Delete domain for the partner_id
      operationId: delete_domain_v1_mailbox_domains__domain_id__delete
      parameters:
        - required: true
          schema:
            title: Domain Id
            type: string
            format: uuid
          name: domain_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mailbox_domains/{token}/verify:
    post:
      tags:
        - Mail
      summary: Verify Domain
      description: Verify domain for the partner_id
      operationId: verify_domain_v1_mailbox_domains__domain_id__verify_post
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
          name: token
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mailboxes:
    get:
      tags:
        - Mail
      summary: Get Mailboxes
      description: Get all mailboxes owned by Entity
      operationId: get_mailboxes_v1_mailboxes_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxDataResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Mail
      summary: Create Mailbox
      description: Create a new mailbox
      operationId: create_mailbox_v1_mailboxes_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailboxDomainRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mailboxes/generate:
    post:
      tags:
        - Mail
      summary: Generate Mailbox
      description: Create a new mailbox when creating a new entity
      operationId: generate_mailbox_v1_mailboxes_generate_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailboxRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mailboxes/search:
    post:
      tags:
        - Mail
      summary: Get Mailboxes By Multiple Entity Ids
      description: Get all mailboxes owned by Entity
      operationId: get_mailboxes_by_multiple_entity_ids_v1_mailboxes_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MailboxMultipleEntitiesRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxDataResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /mailboxes/{mailbox_id}:
    delete:
      tags:
        - Mail
      summary: Delete Mailbox
      description: Delete mailbox
      operationId: delete_mailbox_v1_mailboxes__mailbox_id__delete
      parameters:
        - required: true
          schema:
            title: Mailbox Id
            type: string
            format: uuid
          name: mailbox_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /measure_units:
    get:
      tags:
        - Receivables
      summary: Get Units
      operationId: get_units_v1_measure_units_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create Unit
      operationId: create_unit_v1_measure_units_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /measure_units/{unit_id}:
    get:
      tags:
        - Receivables
      summary: Get Unit By Id
      operationId: get_unit_by_id_v1_measure_units__unit_id__get
      parameters:
        - required: true
          schema:
            title: Unit Id
            type: string
            format: uuid
          name: unit_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Receivables
      summary: Delete Unit By Id
      operationId: delete_unit_by_id_v1_measure_units__unit_id__delete
      parameters:
        - required: true
          schema:
            title: Unit Id
            type: string
            format: uuid
          name: unit_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Receivables
      summary: Update Unit By Id
      operationId: update_unit_by_id_v1_measure_units__unit_id__patch
      parameters:
        - required: true
          schema:
            title: Unit Id
            type: string
            format: uuid
          name: unit_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables:
    get:
      tags:
        - Payables
      summary: Get Payables
      description: Lists all payables from the connected entity.
      operationId: get_payables_payables_get
      parameters:
        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: 'Sort order: `asc` (ascending) or `desc` (descending).'
            default: asc
          name: order
          in: query
        - description: The maximum number of results to return per page.
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: The maximum number of results to return per page.
            default: 100
          name: secret
          in: query
        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          required: false
          schema:
            title: Pagination Token
            type: string
            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          name: pagination_token
          in: query
        - description: The field by which the results will be sorted.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__payables__pagination__CursorFields'
            description: The field by which the results will be sorted.
          name: sort
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/PayableStateEnum'
          name: status
          in: query
        - required: false
          schema:
            title: Amount
            type: integer
          name: amount
          in: query
        - required: false
          schema:
            title: Amount  Gt
            type: integer
          name: amount__gt
          in: query
        - required: false
          schema:
            title: Amount  Lt
            type: integer
          name: amount__lt
          in: query
        - required: false
          schema:
            title: Amount  Gte
            type: integer
          name: amount__gte
          in: query
        - required: false
          schema:
            title: Amount  Lte
            type: integer
          name: amount__lte
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/CurrencyEnum'
          name: currency
          in: query
        - required: false
          schema:
            title: Counterpart Name
            type: string
          name: counterpart_name
          in: query
        - required: false
          schema:
            title: Due Date
            type: string
            format: date-time
          name: due_date
          in: query
        - required: false
          schema:
            title: Due Date  Gt
            type: string
            format: date-time
          name: due_date__gt
          in: query
        - required: false
          schema:
            title: Due Date  Lt
            type: string
            format: date-time
          name: due_date__lt
          in: query
        - required: false
          schema:
            title: Due Date  Gte
            type: string
            format: date-time
          name: due_date__gte
          in: query
        - required: false
          schema:
            title: Due Date  Lte
            type: string
            format: date-time
          name: due_date__lte
          in: query
        - required: false
          schema:
            title: Document Id
            type: string
          name: document_id
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Payables
      summary: Upload New Payable
      description: Uploads an incoming invoice (payable) in PDF, PNG, JPG, or GIF format. The max file size is 10MB.
      operationId: upload_new_payable_payables_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_new_payable_payables_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/pending_actions:
    get:
      tags:
        - Payables
      summary: Get Pending Actions
      description: Get next best actions
      operationId: get_pending_actions_payables_pending_actions_get
      parameters:
        - description: Action for pending invoice.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/PayablePendingActionEnum'
            description: Action for pending invoice.
          name: action_type
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayablePendingActionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: ','
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/upload_with_data:
    post:
      tags:
        - Payables
      summary: Create a payable
      description: |-
        Add a new payable by providing the amount, currency, vendor name, and other details
        along with the original document (`base64_encoded_file`).
        The original document is required for the reference. Any file formats are allowed.

        You can use this endpoint to bypass the Monite OCR service and provide the data directly
        (for example, if you already have the data in place).

        A newly created payable has the the `draft` [status](https://docs.monite.com/docs/payables-lifecycle).
      operationId: upload_payable_with_data_payables_upload_with_data_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayableUploadWithDataSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/{payable_id}:
    get:
      tags:
        - Payables
      summary: Get Payable By Id
      description: Retrieves information about a specific payable with the given ID.
      operationId: get_payable_by_id_payables__payable_id__get
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable is not associated with the entity`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Payables
      summary: Update Payable By Id
      description: Updates the information about a specific payable.
      operationId: update_payable_by_id_payables__payable_id__patch
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayableUpdateSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/{payable_id}/approve_payment_operation:
    post:
      tags:
        - Payables
      summary: Confirm Payment
      description: Confirms that the payable is ready to be paid.
      operationId: confirm_payment_payables__payable_id__approve_payment_operation_post
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/{payable_id}/cancel:
    post:
      tags:
        - Payables
      summary: Cancel Payable
      description: Cancels the payable that was not confirmed during the review.
      operationId: cancel_payable_payables__payable_id__cancel_post
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/{payable_id}/mark_as_paid:
    post:
      tags:
        - Payables
      summary: Mark Payable As Paid
      description: Converts the specified payable status into paid.
      operationId: mark_payable_as_paid_payables__payable_id__mark_as_paid_post
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/{payable_id}/pay:
    post:
      tags:
        - Payables
      summary: Pay
      description: Marks the invoice as paid.
      operationId: pay_payables__payable_id__pay_post
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/{payable_id}/reject:
    post:
      tags:
        - Payables
      summary: Reject Payable
      description: Declines the payable when an approver finds any mismatch or discrepancies.
      operationId: reject_payable_payables__payable_id__reject_post
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/{payable_id}/submit_for_approval:
    post:
      tags:
        - Payables
      summary: Submit For Approval
      description: Starts the approval process once the uploaded payable is validated.
      operationId: submit_for_approval_payables__payable_id__submit_for_approval_post
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayableResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`,`Payable couldn''t be updated due to current state`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payables/{payable_id}/workflow:
    get:
      tags:
        - Payables
      summary: Get Workflow Of The Active Pipeline By Id
      description: Get workflow of the active pipeline by ID
      operationId: get_workflow_of_the_active_pipeline_by_id_payables__payable_id__workflow_get
      parameters:
        - required: true
          schema:
            title: Payable Id
            type: string
            format: uuid
          name: payable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payment_intents:
    post:
      tags:
        - Payments
      summary: Init Payment Link
      description: Use payment_links instead
      operationId: init_payment_link_v1_payment_intents_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentLink'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      deprecated: true
      security:
        - HTTPBearer: []
  /payment_links:
    post:
      tags:
        - Payments
      summary: Init Payment Link
      description: Use payment_links instead
      operationId: init_payment_link_v1_payment_links_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentLink'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentLinkResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payment_terms:
    get:
      tags:
        - Receivables
      summary: Get Items
      operationId: get_items_v1_payment_terms_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermsListResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create Item
      operationId: create_item_v1_payment_terms_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTermsCreatePayload'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /payment_terms/{payment_terms_id}:
    get:
      tags:
        - Receivables
      summary: Get Item By Id
      operationId: get_item_by_id_v1_payment_terms__payment_terms_id__get
      parameters:
        - required: true
          schema:
            title: Payment Terms Id
            type: string
            format: uuid
          name: payment_terms_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Receivables
      summary: Delete Item By Id
      operationId: delete_item_by_id_v1_payment_terms__payment_terms_id__delete
      parameters:
        - required: true
          schema:
            title: Payment Terms Id
            type: string
            format: uuid
          name: payment_terms_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Receivables
      summary: Update Item By Id
      operationId: update_item_by_id_v1_payment_terms__payment_terms_id__patch
      parameters:
        - required: true
          schema:
            title: Payment Terms Id
            type: string
            format: uuid
          name: payment_terms_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTermsUpdatePayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentTermsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /products:
    get:
      tags:
        - Receivables
      summary: Get Items
      operationId: get_items_v1_products_get
      parameters:
        - description: Order by
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: Order by
            default: asc
          name: order
          in: query
        - description: Max is 100
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: Max is 100
            default: 100
          name: limit
          in: query
        - description: A token, obtained from previous page. Prior over other filters
          required: false
          schema:
            title: Pagination Token
            type: string
            description: A token, obtained from previous page. Prior over other filters
          name: pagination_token
          in: query
        - description: Allowed sort fields
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__products_services__pagination__CursorFields'
            description: Allowed sort fields
          name: sort
          in: query
        - required: false
          schema:
            title: Name
            type: string
          name: name
          in: query
        - required: false
          schema:
            title: Name  Contains
            type: string
          name: name__contains
          in: query
        - required: false
          schema:
            title: Name  Icontains
            type: string
          name: name__icontains
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ProductServiceTypeEnum'
          name: type
          in: query
        - required: false
          schema:
            title: Price
            type: integer
          name: price
          in: query
        - required: false
          schema:
            title: Price  Gt
            type: integer
          name: price__gt
          in: query
        - required: false
          schema:
            title: Price  Lt
            type: integer
          name: price__lt
          in: query
        - required: false
          schema:
            title: Price  Gte
            type: integer
          name: price__gte
          in: query
        - required: false
          schema:
            title: Price  Lte
            type: integer
          name: price__lte
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/CurrencyEnum'
          name: currency
          in: query
        - required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CurrencyEnum'
          name: currency__in
          in: query
        - required: false
          schema:
            title: Measure Unit Id
            type: string
            format: uuid
          name: measure_unit_id
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductServicePaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create Item
      operationId: create_item_v1_products_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductServiceRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductServiceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /products/{item_id}:
    get:
      tags:
        - Receivables
      summary: Get Item By Id
      operationId: get_item_by_id_v1_products__item_id__get
      parameters:
        - required: true
          schema:
            title: Item Id
            type: string
            format: uuid
          name: item_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductServiceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Receivables
      summary: Delete Item By Id
      operationId: delete_item_by_id_v1_products__item_id__delete
      parameters:
        - required: true
          schema:
            title: Item Id
            type: string
            format: uuid
          name: item_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Receivables
      summary: Update Item By Id
      operationId: update_item_by_id_v1_products__item_id__patch
      parameters:
        - required: true
          schema:
            title: Item Id
            type: string
            format: uuid
          name: item_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductServiceUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductServiceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables:
    get:
      tags:
        - Receivables
      summary: Get All
      operationId: get_all_v1_receivables_get
      parameters:
        - description: Order by
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: Order by
            default: asc
          name: order
          in: query
        - description: Max is 100
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: Max is 100
            default: 100
          name: limit
          in: query
        - description: A token, obtained from previous page. Prior over other filters
          required: false
          schema:
            title: Pagination Token
            type: string
            description: A token, obtained from previous page. Prior over other filters
          name: pagination_token
          in: query
        - description: Allowed sort fields
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__receivables__pagination__CursorFields'
            description: Allowed sort fields
          name: sort
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ReceivableType'
          name: type
          in: query
        - required: false
          schema:
            title: Document Id
            type: string
          name: document_id
          in: query
        - required: false
          schema:
            title: Document Id  Contains
            type: string
          name: document_id__contains
          in: query
        - required: false
          schema:
            title: Document Id  Icontains
            type: string
          name: document_id__icontains
          in: query
        - required: false
          schema:
            title: Issued Date
            type: string
            format: date-time
          name: issued_date
          in: query
        - required: false
          schema:
            title: Issued Date  Gt
            type: string
            format: date-time
          name: issued_date__gt
          in: query
        - required: false
          schema:
            title: Issued Date  Lt
            type: string
            format: date-time
          name: issued_date__lt
          in: query
        - required: false
          schema:
            title: Issued Date  Gte
            type: string
            format: date-time
          name: issued_date__gte
          in: query
        - required: false
          schema:
            title: Issued Date  Lte
            type: string
            format: date-time
          name: issued_date__lte
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - required: false
          schema:
            title: Counterpart Name
            type: string
          name: counterpart_name
          in: query
        - required: false
          schema:
            title: Counterpart Name  Contains
            type: string
          name: counterpart_name__contains
          in: query
        - required: false
          schema:
            title: Counterpart Name  Icontains
            type: string
          name: counterpart_name__icontains
          in: query
        - required: false
          schema:
            title: Amount
            type: integer
          name: amount
          in: query
        - required: false
          schema:
            title: Amount  Gt
            type: integer
          name: amount__gt
          in: query
        - required: false
          schema:
            title: Amount  Lt
            type: integer
          name: amount__lt
          in: query
        - required: false
          schema:
            title: Amount  Gte
            type: integer
          name: amount__gte
          in: query
        - required: false
          schema:
            title: Amount  Lte
            type: integer
          name: amount__lte
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ReceivablesStatusEnum'
          name: status
          in: query
        - required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ReceivablesStatusEnum'
          name: status__in
          in: query
        - required: false
          schema:
            title: Entity User Id
            type: string
            format: uuid
          name: entity_user_id
          in: query
        - required: false
          schema:
            title: Entity User Id  In
            type: array
            items:
              type: string
              format: uuid
          name: entity_user_id__in
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create New Receivable
      operationId: create_new_receivable_v1_receivables_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceivableFacadeCreatePayload'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivableResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables/variables:
    get:
      tags:
        - Receivables
      summary: Get Variables
      description: Get a list of placeholders allowed to insert into an email template for customization
      operationId: get_variables_v1_receivables_variables_get
      parameters:
        - required: true
          schema:
            $ref: '#/components/schemas/CounterpartType'
          name: counterpart_type
          in: query
        - required: true
          schema:
            $ref: '#/components/schemas/ReceivableType'
          name: receivable_type
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivableVariablesResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables/{receivable_id}:
    get:
      tags:
        - Receivables
      summary: Get Receivable By Id
      operationId: get_receivable_by_id_v1_receivables__receivable_id__get
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivableResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Receivables
      summary: Delete Receivable By Id
      operationId: delete_receivable_by_id_v1_receivables__receivable_id__delete
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Receivables
      summary: Update Receivable By Id
      operationId: update_receivable_by_id_v1_receivables__receivable_id__patch
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceivableUpdatePayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivableResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables/{receivable_id}/accept:
    post:
      tags:
        - Receivables
      summary: Accept Quote
      operationId: accept_quote_v1_receivables__receivable_id__accept_post
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: Payload
              type: object
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables/{receivable_id}/decline:
    post:
      tags:
        - Receivables
      summary: Decline Quote
      operationId: decline_quote_v1_receivables__receivable_id__decline_post
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceivableDeclinePayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables/{receivable_id}/issue:
    post:
      tags:
        - Receivables
      summary: Issue Receivable
      operationId: issue_receivable_v1_receivables__receivable_id__issue_post
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivableResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables/{receivable_id}/pdf_link:
    get:
      tags:
        - Receivables
      summary: Get Pdf Link
      operationId: get_pdf_link_v1_receivables__receivable_id__pdf_link_get
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Pdf Link V1 Receivables  Receivable Id  Pdf Link Get
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables/{receivable_id}/preview:
    post:
      tags:
        - Receivables
      summary: Preview
      operationId: preview_v1_receivables__receivable_id__preview_post
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceivablePreviewRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivablePreviewResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /receivables/{receivable_id}/send:
    post:
      tags:
        - Receivables
      summary: Send
      operationId: send_v1_receivables__receivable_id__send_post
      parameters:
        - required: true
          schema:
            title: Receivable Id
            type: string
            format: uuid
          name: receivable_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceivableSendRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivableSendResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /recurrences:
    get:
      tags:
        - Receivables
      summary: Get All Recurrences
      operationId: get_all_recurrences_v1_recurrences_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllRecurrences'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create Recurrence
      operationId: create_recurrence_v1_recurrences_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecurrencePayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /recurrences/{recurrence_id}:
    get:
      tags:
        - Receivables
      summary: Get Recurrence
      operationId: get_recurrence_v1_recurrences__recurrence_id__get
      parameters:
        - required: true
          schema:
            title: Recurrence Id
            type: string
            format: uuid
          name: recurrence_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Receivables
      summary: Update Recurrence
      operationId: update_recurrence_v1_recurrences__recurrence_id__patch
      parameters:
        - required: true
          schema:
            title: Recurrence Id
            type: string
            format: uuid
          name: recurrence_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecurrencePayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recurrence'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /recurrences/{recurrence_id}/cancel:
    post:
      tags:
        - Receivables
      summary: Delete Reccurence By Id
      operationId: delete_reccurence_by_id_v1_recurrences__recurrence_id__cancel_post
      parameters:
        - required: true
          schema:
            title: Recurrence Id
            type: string
            format: uuid
          name: recurrence_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /roles:
    get:
      tags:
        - Entities and users
      summary: Get Roles
      operationId: get_roles_v1_roles_get
      parameters:
        - description: Order by
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: Order by
            default: asc
          name: order
          in: query
        - description: Max is 100
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: Max is 100
            default: 100
          name: limit
          in: query
        - description: A token, obtained from previous page. Prior over other filters
          required: false
          schema:
            title: Pagination Token
            type: string
            description: A token, obtained from previous page. Prior over other filters
          name: pagination_token
          in: query
        - description: Allowed sort fields
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__roles__pagination__CursorFields'
            description: Allowed sort fields
          name: sort
          in: query
        - required: false
          schema:
            title: Name
            type: string
          name: name
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 206fbbe7-f795-4f60-b95e-f7b99bd34d54
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Entities and users
      summary: Create Role
      operationId: create_role_v1_roles_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /roles/search:
    post:
      tags:
        - Entities and users
      summary: Search Roles
      operationId: search_roles_v1_roles_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRolesPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Search Roles V1 Roles Search Post
                type: array
                items:
                  $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /roles/{role_id}:
    get:
      tags:
        - Entities and users
      summary: Get Role By Id
      operationId: get_role_by_id_v1_roles__role_id__get
      parameters:
        - required: true
          schema:
            title: Role Id
            type: string
            format: uuid
          name: role_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Entities and users
      summary: Update Role By Id
      operationId: update_role_by_id_v1_roles__role_id__patch
      parameters:
        - required: true
          schema:
            title: Role Id
            type: string
            format: uuid
          name: role_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /settings:
    get:
      tags:
        - Entities and users
      summary: Get Partner Project Settings
      operationId: get_partner_project_settings_v1_settings_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerProjectSettingsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Entities and users
      summary: Save Or Replace Partner Project Settings
      operationId: save_or_replace_partner_project_settings_v1_settings_patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerProjectSettingsPayload'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerProjectSettingsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /tags:
    get:
      tags:
        - Payables
      summary: Get Tags
      description: |-
        Get a list of all tags that can be assigned to payables.
            Tags can be used, for example, as trigger conditions in payable approval workflows.
      operationId: get_tags_tags_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Payables
      summary: Create Tag
      description: |-
        Create a new tag for use in payables. The tag name must be unique.
            Tag names are case-sensitive, that is `Marketing` and `marketing` are two different tags.


        The response returns an auto-generated ID assigned to this tag.
        To assign this tag to a payable, send the tag ID in the `tag_ids` list when creating or updating a payable.
      operationId: create_tag_tags_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateOrUpdateSchema'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagReadSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /tags/{tag_id}:
    get:
      tags:
        - Payables
      summary: Get Tag
      description: Get information about a tag with the given ID.
      operationId: get_tag_tags__tag_id__get
      parameters:
        - required: true
          schema:
            title: Tag Id
            type: string
            format: uuid
          name: tag_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagReadSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Payables
      summary: Delete Tag
      description: Delete a tag with the given ID. This tag will be automatically deleted from all payables where it's used.
      operationId: delete_tag_tags__tag_id__delete
      parameters:
        - required: true
          schema:
            title: Tag Id
            type: string
            format: uuid
          name: tag_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '204':
          description: Successful Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Payables
      summary: Update Tag
      description: |-
        Change the tag name. The new name must be unique among existing tags.
            Tag names are case-sensitive, that is `Marketing` and `marketing` are two different tags.
      operationId: update_tag_tags__tag_id__patch
      parameters:
        - required: true
          schema:
            title: Tag Id
            type: string
            format: uuid
          name: tag_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreateOrUpdateSchema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagReadSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /todo_tasks:
    get:
      tags:
        - Payables
      summary: Get All Todo Tasks Assigned
      description: Get all assigned todo tasks
      operationId: get_all_todo_tasks_assigned_todo_tasks_get
      parameters:
        - required: true
          schema:
            title: Include Related Object Information
            type: boolean
          name: include_related_object_information
          in: query
        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: 'Sort order: `asc` (ascending) or `desc` (descending).'
            default: asc
          name: order
          in: query
        - description: The maximum number of results to return per page.
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: The maximum number of results to return per page.
            default: 100
          name: limit
          in: query
        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          required: false
          schema:
            title: Pagination Token
            type: string
            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          name: pagination_token
          in: query
        - description: The field by which the results will be sorted.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__todo__pagination__CursorFields'
            description: The field by which the results will be sorted.
          name: sort
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ObjectType'
          name: object_type
          in: query
        - required: false
          schema:
            title: Object Id
            type: string
            format: uuid
          name: object_id
          in: query
        - required: false
          schema:
            title: Object Id  Isnull
            type: string
          name: object_id__isnull
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/TodoTaskStatusEnum'
          name: status
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTodoTask'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /todo_tasks/counters:
    get:
      tags:
        - Payables
      summary: How Many Tasks Do I Have
      description: Tasks count
      operationId: how_many_tasks_do_i_have_todo_tasks_counters_get
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response How Many Tasks Do I Have Todo Tasks Counters Get
                type: array
                items:
                  $ref: '#/components/schemas/TasksCountSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /todo_tasks/{todo_task_id}:
    get:
      tags:
        - Payables
      summary: Read One Todo Task
      description: Read one todo task
      operationId: read_one_todo_task_todo_tasks__todo_task_id__get
      parameters:
        - required: true
          schema:
            title: Todo Task Id
            type: string
            format: uuid
          name: todo_task_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoTask'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Payables
      summary: Update Task
      description: Update todo task
      operationId: update_task_todo_tasks__todo_task_id__patch
      parameters:
        - required: true
          schema:
            title: Todo Task Id
            type: string
            format: uuid
          name: todo_task_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoTask'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoTask'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: 'Possible responses: `Action for {object_type} at permissions not found: {action}`,`Object type at permissions not found: {object_type}`,`Action {action} for {object_type} not allowed`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /vat_classes:
    get:
      tags:
        - Receivables
      summary: Get Vat Classes
      operationId: get_vat_classes_v1_vat_classes_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatClassListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Receivables
      summary: Create Vat Class
      operationId: create_vat_class_v1_vat_classes_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VatClassRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatClassResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /vat_classes/{vat_class_id}:
    get:
      tags:
        - Receivables
      summary: Get Vat Class By Id
      operationId: get_vat_class_by_id_v1_vat_classes__vat_class_id__get
      parameters:
        - required: true
          schema:
            title: Vat Class Id
            type: string
            format: uuid
          name: vat_class_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VatClassResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /webhook_settings:
    get:
      tags:
        - Events
      summary: Get All
      operationId: get_all_v1_webhook_settings_get
      parameters:
        - required: false
          schema:
            $ref: '#/components/schemas/ObjectType'
          name: object_type
          in: query
        - description: Order by
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: Order by
            default: asc
          name: order
          in: query
        - description: Max is 100
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: Max is 100
            default: 100
          name: limit
          in: query
        - description: A token, obtained from previous page. Prior over other filters
          required: false
          schema:
            title: Pagination Token
            type: string
            description: A token, obtained from previous page. Prior over other filters
          name: pagination_token
          in: query
        - description: Allowed sort fields
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__webhook_settings__pagination__CursorFields'
            description: Allowed sort fields
          name: sort
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSettingsByObjectTypePaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Events
      summary: Post
      operationId: post_v1_webhook_settings_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSettingsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      callbacks:
        webhook_notification:
          '{$request.body.url}':
            post:
              summary: Webhook Notification
              operationId: webhook_notification__request_body_url__post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/api__v1__webhook_settings__callback__EventPayload'
                required: true
              responses:
                '200':
                  description: Successful Response
                  content:
                    application/json:
                      schema: {}
                '422':
                  description: Validation Error
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/HTTPValidationError'
      security:
        - HTTPBearer: []
  /webhook_settings/{webhook_id}:
    get:
      tags:
        - Events
      summary: Get
      operationId: get_v1_webhook_settings__webhook_id__get
      parameters:
        - required: true
          schema:
            title: Webhook Id
            type: string
            format: uuid
          name: webhook_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSettingsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Events
      summary: Delete
      operationId: delete_v1_webhook_settings__webhook_id__delete
      parameters:
        - required: true
          schema:
            title: Webhook Id
            type: string
            format: uuid
          name: webhook_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    patch:
      tags:
        - Events
      summary: Update Webhook
      operationId: update_webhook_v1_webhook_settings__webhook_id__patch
      parameters:
        - required: true
          schema:
            title: Webhook Id
            type: string
            format: uuid
          name: webhook_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSettingsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /webhooks:
    get:
      tags:
        - Events
      summary: Get All
      operationId: get_all_v1_webhooks_get
      parameters:
        - required: false
          schema:
            $ref: '#/components/schemas/ObjectType'
          name: object_type
          in: query
        - required: false
          schema:
            title: Event Id
            type: string
            format: uuid
          name: event_id
          in: query
        - description: Order by
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: Order by
            default: asc
          name: order
          in: query
        - description: Max is 100
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: Max is 100
            default: 100
          name: limit
          in: query
        - description: A token, obtained from previous page. Prior over other filters
          required: false
          schema:
            title: Pagination Token
            type: string
            description: A token, obtained from previous page. Prior over other filters
          name: pagination_token
          in: query
        - description: Allowed sort fields
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__webhooks__pagination__CursorFields'
            description: Allowed sort fields
          name: sort
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 0b8b0dcd-e324-476f-ab08-381345f289b0
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksPaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '416':
          description: Requested Range Not Satisfiable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /workflows:
    get:
      tags:
        - Payables
      summary: Read Workflows
      description: Get workflows
      operationId: read_workflows_workflows_get
      parameters:
        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: 'Sort order: `asc` (ascending) or `desc` (descending).'
            default: asc
          name: order
          in: query
        - description: The maximum number of results to return per page.
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: The maximum number of results to return per page.
            default: 100
          name: limit
          in: query
        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          required: false
          schema:
            title: Pagination Token
            type: string
            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          name: pagination_token
          in: query
        - description: The field by which the results will be sorted.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__workflows__pagination__CursorFields'
            description: The field by which the results will be sorted.
          name: sort
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ObjectType'
          name: object_type
          in: query
        - required: false
          schema:
            title: Policy Name
            type: string
          name: policy_name
          in: query
        - required: false
          schema:
            title: Created By
            type: string
            format: uuid
          name: created_by
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowsPaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    post:
      tags:
        - Payables
      summary: Create New Workflow
      description: Create new workflow
      operationId: create_new_workflow_workflows_post
      parameters:
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowSchema'
            examples:
              minimal:
                summary: Minimal example
                value:
                  policy_name: Approve everything
                  policy_description: All newly added payables require a finance manager's approval
                  workflow:
                    trigger:
                      version: 1
                      object_type: payable
                      action: create
                      currency: EUR
                    functions:
                      - call:
                          method: Payables.request_approval_by_entity_user
                          params:
                            entity_user_ids:
                              - 5f3196d2-48ce-4c1e-b29e-c3e5d1fb7a13
              all fields:
                summary: All possible fields
                description: This example includes all possible trigger conditions. You can remove those you don't need.
                value:
                  policy_name: Travel expense approval
                  policy_description: ''
                  workflow:
                    trigger:
                      version: 1
                      object_type: payable
                      action: create
                      currency: EUR
                      amount:
                        gte: 1
                        lte: 50000
                      counterparts:
                        - bbe12a96-a09e-45ef-b407-6fc914329c32
                        - 21f69def-8e5c-4e45-bc15-7bf790b4e32a
                      created_by_users:
                        - 6d16b0b3-ebbe-49f1-a1e7-5d80597ec068
                        - 8bfeb795-b903-4db5-b601-44692efdebe4
                      created_by_roles:
                        - f601d398-3e0a-4919-b249-79003947be10
                        - ac87f0c1-34c6-48de-9869-3bf3ef94fe02
                      statuses:
                        - paid
                        - waiting_to_be_paid
                      tags:
                        - travel expenses
                        - marketing
                      custom_params:
                        comes_from_email: true
                        comes_from_upload: true
                        previously_approved: true
                    functions:
                      - call:
                          method: Payables.request_approval_by_entity_user
                          params:
                            entity_user_ids:
                              - 5f3196d2-48ce-4c1e-b29e-c3e5d1fb7a13
                              - 7a3696a5-56ef-5b43-af9f-2ae5d1fb7b25
                            entity_users_to_approve: 2
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '409':
          description: Biz logic error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /workflows/pipelines:
    get:
      tags:
        - Payables
      summary: Get Pipelines
      description: Get pipelines
      operationId: get_pipelines_workflows_pipelines_get
      parameters:
        - description: 'Sort order: `asc` (ascending) or `desc` (descending).'
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/OrderEnum'
            description: 'Sort order: `asc` (ascending) or `desc` (descending).'
            default: asc
          name: order
          in: query
        - description: The maximum number of results to return per page.
          required: false
          schema:
            title: Limit
            maximum: 100
            minimum: 1
            type: integer
            description: The maximum number of results to return per page.
            default: 100
          name: limit
          in: query
        - description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          required: false
          schema:
            title: Pagination Token
            type: string
            description: The pagination token to access the next or previous page of results. If `pagination_token` is specified, the `sort`, `order`, and filtering parameters are ignored.
          name: pagination_token
          in: query
        - description: The field by which the results will be sorted.
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/api__v1__workflows__pagination__CursorFields'
            description: The field by which the results will be sorted.
          name: sort
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ObjectType'
          name: object_type
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/biz__objects__workflows__enums__WorkflowPipelineStatusEnum'
          name: status
          in: query
        - required: false
          schema:
            title: Created At
            type: string
            format: date-time
          name: created_at
          in: query
        - required: false
          schema:
            title: Created At  Gt
            type: string
            format: date-time
          name: created_at__gt
          in: query
        - required: false
          schema:
            title: Created At  Lt
            type: string
            format: date-time
          name: created_at__lt
          in: query
        - required: false
          schema:
            title: Created At  Gte
            type: string
            format: date-time
          name: created_at__gte
          in: query
        - required: false
          schema:
            title: Created At  Lte
            type: string
            format: date-time
          name: created_at__lte
          in: query
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelinesPaginationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /workflows/pipelines/{pipeline_id}:
    get:
      tags:
        - Payables
      summary: Get Single Pipeline
      description: Get pipeline
      operationId: get_single_pipeline_workflows_pipelines__pipeline_id__get
      parameters:
        - required: true
          schema:
            title: Pipeline Id
            type: string
            format: uuid
          name: pipeline_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /workflows/{workflow_id}:
    get:
      tags:
        - Payables
      summary: Read Single Workflow
      description: Get workflow
      operationId: read_single_workflow_workflows__workflow_id__get
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
            format: uuid
          name: workflow_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
    delete:
      tags:
        - Payables
      summary: Delete Workflow
      description: Delete workflow
      operationId: delete_workflow_workflows__workflow_id__delete
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
            format: uuid
          name: workflow_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
  /workflows/{workflow_id}/pipelines:
    get:
      tags:
        - Payables
      summary: Read Pipelines By Workflow Id
      description: Get pipelines by workflow ID
      operationId: read_pipelines_by_workflow_id_workflows__workflow_id__pipelines_get
      parameters:
        - required: true
          schema:
            title: Workflow Id
            type: string
            format: uuid
          name: workflow_id
          in: path
        - description: monite entity_id
          required: true
          schema:
            title: X-Monite-Entity-Id
            type: string
            description: monite entity_id
            format: uuid
          example: 9d2b4c8f-2087-4738-ba91-7359683c49a4
          name: x-monite-entity-id
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Read Pipelines By Workflow Id Workflows  Workflow Id  Pipelines Get
                type: array
                items:
                  $ref: '#/components/schemas/PipelineResponseSchema'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaResponse'
      security:
        - HTTPBearer: []
components:
  schemas:
    AllowedCountriesInternalCodes:
      enum:
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KP
        - KR
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - AN
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - MP
        - 'NO'
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RE
        - RO
        - RU
        - RW
        - SH
        - KN
        - LC
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - CS
        - SC
        - SL
        - SG
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SZ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - UG
        - UA
        - AE
        - GB
        - US
        - UM
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW
      type: string
      description: An enumeration.
    AllowedCountriesCodes:
      enum:
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KP
        - KR
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - AN
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - MP
        - 'NO'
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RE
        - RO
        - RU
        - RW
        - SH
        - KN
        - LC
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - CS
        - SC
        - SL
        - SG
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SZ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - UG
        - UA
        - AE
        - GB
        - US
        - UM
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW
      type: string
      description: An enumeration.
    CommercialConditionRequest:
      required:
        - name
        - description
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    CommercialConditionResponse:
      required:
        - name
        - description
        - entity_id
        - created_at
        - updated_at
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: string
          format: uuid
        entity_id:
          type: string
          format: uuid
        entity_user_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CommercialConditionUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    CounterpartAddress:
      required:
        - country
        - city
        - postal_code
        - state
        - line1
      type: object
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/AllowedCountriesCodes'
          description: Two-letter ISO country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
          example: DE
        city:
          type: string
          description: City name.
          example: Berlin
        postal_code:
          type: string
          description: ZIP or postal code.
          example: '10115'
        state:
          type: string
          description: State, region, province, or county.
        line1:
          type: string
          description: Street address.
          example: Flughafenstrasse 52
        line2:
          type: string
          description: Additional address information (if any).
      description: Address information.
    CounterpartBankAccount:
      type: object
      properties:
        iban:
          maxLength: 34
          type: string
        bic:
          maxLength: 11
          type: string
        name:
          maxLength: 200
          type: string
    CounterpartBankAccountResponse:
      required:
        - id
        - counterpart_id
      type: object
      properties:
        iban:
          maxLength: 34
          type: string
        bic:
          maxLength: 11
          type: string
        name:
          maxLength: 200
          type: string
        id:
          type: string
          format: uuid
        counterpart_id:
          type: string
          format: uuid
    CounterpartContactResponse:
      required:
        - first_name
        - last_name
        - email
        - phone
        - is_default
        - address
        - id
        - counterpart_id
      type: object
      properties:
        first_name:
          type: string
          description: The first name of a contact person.
          example: Mary
        last_name:
          type: string
          description: The last name of a contact person.
          example: O'Brien
        email:
          type: string
          description: The email address of a contact person.
          format: email
          example: contact@example.org
        phone:
          type: string
          description: The phone number of a contact person
          example: '5551235476'
        is_default:
          type: boolean
          description: Specifies if this contact person is the default one in case the organization has multiple contacts.
        address:
          allOf:
            - $ref: '#/components/schemas/CounterpartAddress'
          description: The address of a contact person.
        title:
          type: string
          description: 'The title or honorific of a contact person. Examples: Mr., Ms., Dr., Prof.'
          example: Ms.
        id:
          type: string
          format: uuid
        counterpart_id:
          type: string
          format: uuid
      description: The contact person for an organization.
    CounterpartCreateIndividualPayload:
      required:
        - type
        - individual
      type: object
      properties:
        type:
          enum:
            - individual
          type: string
          description: Must be "individual".
          example: individual
        individual:
          $ref: '#/components/schemas/CounterpartIndividual'
      description: This schema is used to create counterparts that are individuals (natural persons).
    CounterpartCreateOrganizationPayload:
      required:
        - type
        - organization
      type: object
      properties:
        type:
          enum:
            - organization
          type: string
          description: Must be "organization".
          example: organization
        organization:
          $ref: '#/components/schemas/CounterpartOrganization'
      description: This schema is used to create counterparts that are organizations (juridical persons).
    CounterpartCreatePayload:
      anyOf:
        - $ref: '#/components/schemas/CounterpartCreateOrganizationPayload'
        - $ref: '#/components/schemas/CounterpartCreateIndividualPayload'
      description: |-
        This schema is used to create new counterparts (either organizations or individuals).
        The counterpart type is specified by the `type` property. Depending on the `type`,
        you need to provide the data for either the `individual` or `organization` property.
    CounterpartIndividual:
      required:
        - first_name
        - last_name
        - is_vendor
        - is_customer
        - residential_address
      type: object
      properties:
        first_name:
          type: string
          description: The person's first name.
          example: Adnan
        last_name:
          type: string
          description: The person's last name.
          example: Singh
        title:
          type: string
          description: 'The person''s title or honorific. Examples: Mr., Ms., Dr., Prof.'
          example: Mr.
        is_vendor:
          type: boolean
          description: Indicates if the counterpart is a vendor.
        is_customer:
          type: boolean
          description: Indicates if the counterpart is a customer.
        phone:
          type: string
          description: The person's phone number.
          example: '5553211234'
        email:
          type: string
          description: The person's email address.
          example: asingh@example.net
        tax_id:
          type: string
          description: The person's Tax ID.
          example: '1234567'
        residential_address:
          allOf:
            - $ref: '#/components/schemas/CounterpartAddress'
          description: The person's address.
      description: Represents counterparts that are individuals (natural persons).
    CounterpartIndividualResponse:
      required:
        - id
        - created_at
        - updated_at
        - type
        - individual
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the counterpart.
          format: uuid
        created_at:
          type: string
          description: Date and time when the counterpart was created. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
          format: date-time
        updated_at:
          type: string
          description: Date and time when the counterpart was last updated. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
          format: date-time
        type:
          allOf:
            - $ref: '#/components/schemas/CounterpartType'
          description: 'The counterpart type: `organization` (juridical person) or `individual` (natural person).'
        created_automatically:
          type: boolean
          description: '`true` if the counterpart was created automatically by Monite when processing incoming invoices with OCR. `false` if the counterpart was created by the API client.'
          default: false
        individual:
          $ref: '#/components/schemas/CounterpartIndividual'
      description: Represents counterparts that are individuals (natural persons).
    CounterpartOrganization:
      required:
        - legal_name
        - vat_number
        - is_vendor
        - is_customer
        - registered_address
        - contacts
      type: object
      properties:
        legal_name:
          type: string
          description: The legal name of the organization.
          example: Acme Inc.
        vat_number:
          type: string
          description: The VAT number of the organization.
          example: '101002749'
        is_vendor:
          type: boolean
          description: Indicates if the counterpart is a vendor.
        is_customer:
          type: boolean
          description: Indicates if the counterpart is a customer.
        phone:
          type: string
          description: The phone number of the organization
          example: '5551231234'
        email:
          type: string
          description: The email address of the organization
          example: acme@example.com
        registered_address:
          allOf:
            - $ref: '#/components/schemas/CounterpartAddress'
          description: The address of the organization.
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/CreateCounterpartContactPayload'
          description: An array of contacts for this organization.
      description: Represents counterparts that are organizations (juridical persons).
    CounterpartOrganizationResponse:
      required:
        - id
        - created_at
        - updated_at
        - type
        - organization
      type: object
      properties:
        id:
          type: string
          description: Unique ID of the counterpart.
          format: uuid
        created_at:
          type: string
          description: Date and time when the counterpart was created. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
          format: date-time
        updated_at:
          type: string
          description: Date and time when the counterpart was last updated. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
          format: date-time
        type:
          allOf:
            - $ref: '#/components/schemas/CounterpartType'
          description: 'The counterpart type: `organization` (juridical person) or `individual` (natural person).'
        created_automatically:
          type: boolean
          description: '`true` if the counterpart was created automatically by Monite when processing incoming invoices with OCR. `false` if the counterpart was created by the API client.'
          default: false
        organization:
          $ref: '#/components/schemas/CounterpartOrganization'
      description: Represents counterparts that are organizations (juridical persons).
    CounterpartPaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartResponse'
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
      description: A paginated list of counterparts
    CounterpartResponse:
      anyOf:
        - $ref: '#/components/schemas/CounterpartIndividualResponse'
        - $ref: '#/components/schemas/CounterpartOrganizationResponse'
      description: |-
        A Counterpart object contains information about an organization (juridical person) or
        individual (natural person) that provides goods and services to or buys them from an
        [SME](https://monite.stoplight.io/docs/api-docs/ZG9jOjQyMDM0NzMx-glossary#sme).
    CounterpartType:
      enum:
        - individual
        - organization
      type: string
      description: An enumeration.
    CounterpartUpdateAddress:
      required:
        - country
        - city
        - postal_code
        - state
        - line1
      type: object
      properties:
        blacklist:
          allOf:
            - $ref: '#/components/schemas/AllowedCountriesCodes'
          description: Two-letter ISO country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
          example: DE
        country_internal:
          allOf:
            - $ref: '#/components/schemas/AllowedCountriesCodes'
          description: Two-letter ISO country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
          example: DE
        country:
          allOf:
            - $ref: '#/components/schemas/AllowedCountriesCodes'
          description: Two-letter ISO country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
          example: DE
        city:
          type: string
          description: City name.
          example: Berlin
        postal_code:
          type: string
          description: ZIP or postal code.
          example: '10115'
        state:
          type: string
          description: State, region, province, or county.
        line1:
          type: string
          description: Street address.
          example: Flughafenstrasse 52
        line2:
          type: string
          description: Additional address information (if any).
      description: The business address of a counterpart (organization or individual).
    CounterpartUpdatePayload:
      anyOf:
        - $ref: '#/components/schemas/OptionalIndividualPayload'
        - $ref: '#/components/schemas/OptionalOrganizationPayload'
      description: This schema is used to update existing counterparts (organizations or individuals).
    CreateCounterpartContactPayload:
      required:
        - first_name
        - last_name
        - email
        - phone
        - is_default
        - address
      type: object
      properties:
        first_name:
          type: string
          description: The first name of a contact person.
          example: Mary
        last_name:
          type: string
          description: The last name of a contact person.
          example: O'Brien
        email:
          type: string
          description: The email address of a contact person.
          format: email
          example: contact@example.org
        phone:
          type: string
          description: The phone number of a contact person
          example: '5551235476'
        is_default:
          type: boolean
          description: Specifies if this contact person is the default one in case the organization has multiple contacts.
        address:
          allOf:
            - $ref: '#/components/schemas/CounterpartAddress'
          description: The address of a contact person.
        title:
          type: string
          description: 'The title or honorific of a contact person. Examples: Mr., Ms., Dr., Prof.'
          example: Ms.
      description: The contact person for an organization.
    CreateRecurrencePayload:
      required:
        - invoice_id
        - start_year
        - start_month
        - end_year
        - end_month
        - day_of_month
      type: object
      properties:
        invoice_id:
          type: string
          format: uuid
        start_year:
          maximum: 2077
          type: integer
        start_month:
          maximum: 12
          minimum: 1
          type: integer
        end_year:
          maximum: 2077
          type: integer
        end_month:
          maximum: 12
          minimum: 1
          type: integer
        day_of_month:
          $ref: '#/components/schemas/DayOfMonth'
    CurrencyEnum:
      enum:
        - USD
        - EUR
        - JPY
        - GBP
        - AUD
        - CAD
        - CHF
        - CNY
        - HKD
        - NZD
        - SEK
        - KRW
        - SGD
        - NOK
        - MXN
        - INR
        - RUB
        - ZAR
        - TRY
        - BRL
      type: string
      description: An enumeration.
    DayOfMonth:
      enum:
        - first_day
        - last_day
      type: string
      description: An enumeration.
    EntityAddressSchema:
      required:
        - city
        - postal_code
        - line1
      type: object
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/AllowedCountriesCodes'
          description: 'A country name (as ISO code) where the entity is registered '
          default: DE
        city:
          maxLength: 255
          type: string
          description: A city (a full name) where the entity is registered
        postal_code:
          maxLength: 10
          type: string
          description: A postal code of the address where the entity is registered
        state:
          type: string
          description: A state in a country where the entity is registered
        line1:
          maxLength: 255
          type: string
          description: A street where the entity is registered
        line2:
          maxLength: 100
          type: string
          description: An alternative street used by the entity
      description: A schema represents address info of the entity
    EntityBankAccountRequest:
      required:
        - iban
        - bic
        - bank_name
      type: object
      properties:
        iban:
          maxLength: 34
          type: string
          description: The IBAN of the entity’s bank account.
        bic:
          maxLength: 11
          type: string
          description: The BIC of the entity’s bank account.
        bank_name:
          type: string
          description: The name of the entity’s bank account.
        display_name:
          type: string
    EntityIndividual:
      required:
        - first_name
        - last_name
        - type
      type: object
      properties:
        phone:
          type: string
          description: A phone number of the entity
        logo:
          maxLength: 2083
          minLength: 1
          type: string
          description: A link to the entity logo
          format: uri
        email:
          type: string
          description: An email of the entity
          format: email
        first_name:
          type: string
          description: The first name of the entity issuing the receivable
        last_name:
          type: string
          description: The last name of the entity issuing the receivable
        tax_id:
          type: string
          description: The Tax ID of the entity issuing the receivable
        type:
          enum:
            - individual
          type: string
          description: The entity type
      description: A schema for an entity of individual type
    EntityOrganization:
      required:
        - name
        - type
      type: object
      properties:
        phone:
          type: string
          description: A phone number of the entity
        logo:
          maxLength: 2083
          minLength: 1
          type: string
          description: A link to the entity logo
          format: uri
        email:
          type: string
          description: An email of the entity
          format: email
        name:
          type: string
          description: The name of the entity issuing the receivable, when it is an organization.
        vat_id:
          type: string
          description: The VAT ID of the entity issuing the receivable, when it is an organization.
        type:
          enum:
            - organization
          type: string
          description: The entity type
      description: A schema for an entity of organization type
    ErrorSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    ErrorSchemaResponse:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorSchema'
    GetAllRecurrences:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Recurrence'
    HTTPValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    InvoiceResponsePayload:
      required:
        - type
        - id
        - created_at
        - updated_at
        - currency
        - total_amount
        - line_items
        - entity_address
        - entity
        - counterpart_id
        - counterpart_type
        - counterpart_address
        - status
        - total_vat_amount
      type: object
      properties:
        type:
          enum:
            - invoice
          type: string
          description: The type of the document uploaded.
        id:
          type: string
          format: uuid
        created_at:
          type: string
          description: Time at which the receivable was created. Timestamps follow the ISO 8601 standard.
          format: date-time
        updated_at:
          type: string
          description: Time at which the receivable was last updated. Timestamps follow the ISO 8601 standard.
          format: date-time
        document_id:
          type: string
          description: The sequential code systematically assigned to invoices.
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: The currency used in the receivable.
        total_amount:
          type: integer
          description: The total price of the receivable.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/ResponseItem'
        entity_address:
          $ref: '#/components/schemas/EntityAddressSchema'
        entity:
          anyOf:
            - $ref: '#/components/schemas/EntityOrganization'
            - $ref: '#/components/schemas/EntityIndividual'
        entity_user_id:
          type: string
          description: The entity user who created this document.
          format: uuid
        counterpart_id:
          type: string
          description: Unique ID of the counterpart.
          format: uuid
        counterpart_type:
          allOf:
            - $ref: '#/components/schemas/CounterpartType'
          description: The type of the counterpart.
        counterpart_address:
          $ref: '#/components/schemas/CounterpartAddress'
        counterpart_contact:
          allOf:
            - $ref: '#/components/schemas/ReceivableCounterpartContact'
          description: Additional information about counterpart contacts.
        counterpart_name:
          type: string
          description: A legal name of a counterpart it is an organization
        file_url:
          type: string
        commercial_condition_description:
          type: string
          description: The commercial terms of the receivable (e.g. The products must be delivered in X days).
        status:
          allOf:
            - $ref: '#/components/schemas/ReceivablesStatusEnum'
          description: The status of the receivable inside the receivable workflow.
        total_vat_amount:
          type: string
          description: The sum from the VAT of the individual line items monetary amount.
        entity_bank_account:
          $ref: '#/components/schemas/EntityBankAccountRequest'
        vat_exempt:
          type: boolean
          description: Indicates whether the goods, materials, or services listed in the receivable are exempt from VAT or not.
        vat_exemption_rationale:
          type: string
          description: The reason for the VAT exemption, if applicable.
        based_on:
          type: string
          description: The unique ID of a previous document related to the receivable if applicable.
          format: uuid
        memo:
          type: string
          description: A note with additional information for a receivable
        payment_reminder_id:
          type: string
          format: uuid
        recurrence_id:
          type: string
          description: Stores an unique ID of a recurrence if the receivable is in a recurring status
          format: uuid
        payment_terms:
          $ref: '#/components/schemas/PaymentTerms'
    IterationStatus:
      enum:
        - pending
        - completed
        - canceled
        - issue_failed
      type: string
      description: An enumeration.
    LineItem:
      required:
        - price
        - quantity
      type: object
      properties:
        price:
          $ref: '#/components/schemas/Price'
        quantity:
          minimum: 0
          exclusiveMinimum: true
          type: integer
    LineItemProduct:
      required:
        - name
        - measure_unit_id
        - vat_classes
        - entity_id
        - created_at
        - updated_at
        - vat_class
        - measure_unit
      type: object
      properties:
        name:
          type: string
          description: Name of the product.
        description:
          type: string
          description: Description of the product.
        price:
          $ref: '#/components/schemas/Price'
        measure_unit_id:
          type: string
          description: The unique ID reference of the unit used to measure the quantity of this product (e.g. items, meters, kilograms).
          format: uuid
        vat_classes:
          type: array
          items:
            type: string
            format: uuid
          description: The list of unique ID references of VAT classes for the product.
        smallest_amount:
          minimum: 0
          type: number
          description: The smallest amount allowed for this product.
        id:
          type: string
          description: Unique ID of the product.
          format: uuid
        entity_id:
          type: string
          format: uuid
        entity_user_id:
          type: string
          format: uuid
        created_at:
          type: string
          description: Time at which the product was created. Timestamps follow the ISO 8601 standard.
          format: date-time
        updated_at:
          type: string
          description: Time at which the product was last updated. Timestamps follow the ISO 8601 standard.
          format: date-time
        vat_class:
          $ref: '#/components/schemas/VatClassResponse'
        measure_unit:
          $ref: '#/components/schemas/UnitResponse'
    OptionalCounterpartIndividual:
      type: object
      properties:
        first_name:
          type: string
          description: The person's first name.
          example: Adnan
        last_name:
          type: string
          description: The person's last name.
          example: Singh
        title:
          type: string
          description: 'The person''s title or honorific. Examples: Mr., Ms., Dr., Prof.'
          example: Mr.
        is_vendor:
          type: boolean
          description: Indicates if the counterpart is a vendor.
        is_customer:
          type: boolean
          description: Indicates if the counterpart is a customer.
        phone:
          type: string
          description: The person's phone number.
          example: '5553211234'
        email:
          type: string
          description: The person's email address.
          example: asingh@example.net
        tax_id:
          type: string
          description: The person's Tax ID.
          example: '1234567'
        residential_address:
          allOf:
            - $ref: '#/components/schemas/CounterpartUpdateAddress'
          description: The person's address.
      description: Represents counterparts that are individuals (natural persons).
    OptionalCounterpartUpdateOrganization:
      type: object
      properties:
        legal_name:
          type: string
          description: The legal name of the organization.
          example: Acme Inc.
        vat_number:
          type: string
          description: The VAT number of the organization.
          example: '101002749'
        is_vendor:
          type: boolean
          description: Indicates if the counterpart is a vendor.
        is_customer:
          type: boolean
          description: Indicates if the counterpart is a customer.
        phone:
          type: string
          description: The phone number of the organization.
          example: '5551231234'
        email:
          type: string
          description: The email address of the organization.
          example: acme@example.com
        registered_address:
          allOf:
            - $ref: '#/components/schemas/CounterpartUpdateAddress'
          description: The address of the organization.
      description: Represents counterparts that are organizations (juridical persons).
    OptionalIndividualPayload:
      required:
        - type
        - individual
      type: object
      properties:
        type:
          enum:
            - individual
          type: string
          description: Must be "individual".
          example: individual
        individual:
          $ref: '#/components/schemas/OptionalCounterpartIndividual'
      description: Represents counterparts that are individuals (natural persons).
    OptionalOrganizationPayload:
      required:
        - type
        - organization
      type: object
      properties:
        type:
          enum:
            - organization
          type: string
          description: Must be "organization".
          example: organization
        organization:
          $ref: '#/components/schemas/OptionalCounterpartUpdateOrganization'
      description: Represents counterparts that are organizations (juridical persons).
    OrderEnum:
      enum:
        - asc
        - desc
      description: An enumeration.
    PaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayableResponseSchema'
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
      description: A paginated list of payables.
    PaymentTerm:
      required:
        - number_of_days
      type: object
      properties:
        number_of_days:
          maximum: 10000
          minimum: 0
          type: integer
          description: The amount of days after the invoice issue date.
    PaymentTermDiscount:
      required:
        - number_of_days
        - discount
      type: object
      properties:
        number_of_days:
          maximum: 10000
          minimum: 0
          type: integer
          description: The amount of days after the invoice issue date.
        discount:
          maximum: 10000
          minimum: 0
          type: integer
          description: The discount percentage in minor units. E.g., 200 means 2%. 1050 means 10.5%.
    PaymentTermDiscountWithDate:
      required:
        - number_of_days
        - discount
      type: object
      properties:
        number_of_days:
          maximum: 10000
          minimum: 0
          type: integer
          description: The amount of days after the invoice issue date.
        discount:
          maximum: 10000
          minimum: 0
          type: integer
          description: The discount percentage in minor units. E.g., 200 means 2%. 1050 means 10.5%.
        end_date:
          type: string
          format: date
    PaymentTerms:
      required:
        - id
        - term_final
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        term_final:
          $ref: '#/components/schemas/TermFinalWithDate'
        term_1:
          $ref: '#/components/schemas/PaymentTermDiscountWithDate'
        term_2:
          $ref: '#/components/schemas/PaymentTermDiscountWithDate'
    PaymentTermsCreatePayload:
      required:
        - name
        - term_final
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        term_final:
          $ref: '#/components/schemas/PaymentTerm'
        term_1:
          $ref: '#/components/schemas/PaymentTermDiscount'
        term_2:
          $ref: '#/components/schemas/PaymentTermDiscount'
    PaymentTermsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTermsResponse'
    PaymentTermsResponse:
      required:
        - name
        - term_final
        - id
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        term_final:
          $ref: '#/components/schemas/PaymentTerm'
        term_1:
          $ref: '#/components/schemas/PaymentTermDiscount'
        term_2:
          $ref: '#/components/schemas/PaymentTermDiscount'
        id:
          type: string
          format: uuid
    PaymentTermsUpdatePayload:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        term_final:
          $ref: '#/components/schemas/PaymentTerm'
        term_1:
          $ref: '#/components/schemas/PaymentTermDiscount'
        term_2:
          $ref: '#/components/schemas/PaymentTermDiscount'
    Price:
      required:
        - currency
        - value
      type: object
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: The currency in which the price of the product is set.
        value:
          minimum: 0
          type: integer
          description: The actual price of the product.
    ProductServicePaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductServiceResponse'
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
      description: A paginated list of products and services
    ProductServiceRequest:
      required:
        - name
        - measure_unit_id
        - vat_classes
      type: object
      properties:
        name:
          type: string
          description: Name of the product.
        description:
          type: string
          description: Description of the product.
        price:
          $ref: '#/components/schemas/Price'
        measure_unit_id:
          type: string
          description: The unique ID reference of the unit used to measure the quantity of this product (e.g. items, meters, kilograms).
          format: uuid
        vat_classes:
          type: array
          items:
            type: string
            format: uuid
          description: The list of unique ID references of VAT classes for the product.
        smallest_amount:
          minimum: 0
          type: number
          description: The smallest amount allowed for this product.
    ProductServiceResponse:
      required:
        - name
        - measure_unit_id
        - vat_classes
        - entity_id
        - created_at
        - updated_at
      type: object
      properties:
        name:
          type: string
          description: Name of the product.
        description:
          type: string
          description: Description of the product.
        price:
          $ref: '#/components/schemas/Price'
        measure_unit_id:
          type: string
          description: The unique ID reference of the unit used to measure the quantity of this product (e.g. items, meters, kilograms).
          format: uuid
        vat_classes:
          type: array
          items:
            type: string
            format: uuid
          description: The list of unique ID references of VAT classes for the product.
        smallest_amount:
          minimum: 0
          type: number
          description: The smallest amount allowed for this product.
        id:
          type: string
          description: Unique ID of the product.
          format: uuid
        entity_id:
          type: string
          format: uuid
        entity_user_id:
          type: string
          format: uuid
        created_at:
          type: string
          description: Time at which the product was created. Timestamps follow the ISO 8601 standard.
          format: date-time
        updated_at:
          type: string
          description: Time at which the product was last updated. Timestamps follow the ISO 8601 standard.
          format: date-time
    ProductServiceTypeEnum:
      enum:
        - product
        - service
      type: string
      description: An enumeration.
    ProductServiceUpdate:
      type: object
      properties:
        name:
          type: string
          description: Name of the product.
        description:
          type: string
          description: Description of the product.
        price:
          $ref: '#/components/schemas/Price'
        vat_classes:
          type: array
          items:
            type: string
            format: uuid
          description: The list of unique ID references of VAT classes for the product.
        smallest_amount:
          minimum: 0
          type: number
          description: The smallest amount allowed for this product.
    QuoteResponsePayload:
      required:
        - type
        - id
        - created_at
        - updated_at
        - currency
        - total_amount
        - line_items
        - entity_address
        - entity
        - counterpart_id
        - counterpart_type
        - counterpart_address
        - status
        - total_vat_amount
      type: object
      properties:
        type:
          enum:
            - quote
          type: string
          description: The type of the document uploaded.
        expiry_date:
          type: string
          description: Time by which the quote is active. Timestamps follow the ISO 8601 standard.
          format: date-time
        id:
          type: string
          format: uuid
        created_at:
          type: string
          description: Time at which the receivable was created. Timestamps follow the ISO 8601 standard.
          format: date-time
        updated_at:
          type: string
          description: Time at which the receivable was last updated. Timestamps follow the ISO 8601 standard.
          format: date-time
        document_id:
          type: string
          description: The sequential code systematically assigned to invoices.
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: The currency used in the receivable.
        total_amount:
          type: integer
          description: The total price of the receivable.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/ResponseItem'
        entity_address:
          $ref: '#/components/schemas/EntityAddressSchema'
        entity:
          anyOf:
            - $ref: '#/components/schemas/EntityOrganization'
            - $ref: '#/components/schemas/EntityIndividual'
        entity_user_id:
          type: string
          description: The entity user who created this document.
          format: uuid
        counterpart_id:
          type: string
          description: Unique ID of the counterpart.
          format: uuid
        counterpart_type:
          allOf:
            - $ref: '#/components/schemas/CounterpartType'
          description: The type of the counterpart.
        counterpart_address:
          $ref: '#/components/schemas/CounterpartAddress'
        counterpart_contact:
          allOf:
            - $ref: '#/components/schemas/ReceivableCounterpartContact'
          description: Additional information about counterpart contacts.
        counterpart_name:
          type: string
          description: A legal name of a counterpart it is an organization
        file_url:
          type: string
        commercial_condition_description:
          type: string
          description: The commercial terms of the receivable (e.g. The products must be delivered in X days).
        status:
          allOf:
            - $ref: '#/components/schemas/ReceivablesStatusEnum'
          description: The status of the receivable inside the receivable workflow.
        total_vat_amount:
          type: string
          description: The sum from the VAT of the individual line items monetary amount.
        entity_bank_account:
          $ref: '#/components/schemas/EntityBankAccountRequest'
        vat_exempt:
          type: boolean
          description: Indicates whether the goods, materials, or services listed in the receivable are exempt from VAT or not.
        vat_exemption_rationale:
          type: string
          description: The reason for the VAT exemption, if applicable.
        based_on:
          type: string
          description: The unique ID of a previous document related to the receivable if applicable.
          format: uuid
        memo:
          type: string
          description: A note with additional information for a receivable
        payment_reminder_id:
          type: string
          format: uuid
        recurrence_id:
          type: string
          description: Stores an unique ID of a recurrence if the receivable is in a recurring status
          format: uuid
        comment:
          type: string
          description: Field with a comment on why the client declined this Quote
    ReceivableCounterpartContact:
      required:
        - first_name
        - last_name
        - email
        - phone
        - address
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the counterpart contact.
          example: Marge
        last_name:
          type: string
          description: The last name of the counterpart contact.
          example: Smith
        email:
          type: string
          description: The contact email of the counterpart.
          format: email
          example: marge@example.org
        phone:
          type: string
          description: The contact phone number of the counterpart.
          example: '55512378654'
        title:
          type: string
          description: The counterpart contact title (e.g. Dr., Mr., Mrs., Ms., etc).
          example: Dr.
        address:
          allOf:
            - $ref: '#/components/schemas/CounterpartAddress'
          description: The contact address of the counterpart
    ReceivableCreateBasedOnPayload:
      required:
        - based_on
      type: object
      properties:
        based_on:
          type: string
          description: The unique ID of a previous document related to the receivable if applicable.
          format: uuid
    ReceivableDeclinePayload:
      type: object
      properties:
        comment:
          type: string
          description: Field with a comment on why the client declined this Quote
      description: Payload for decline a Qoute with a comment
    ReceivableFacadeCreateInvoicePayload:
      required:
        - type
        - currency
        - line_items
        - counterpart_id
      type: object
      properties:
        type:
          enum:
            - invoice
          type: string
          description: The type of the document uploaded.
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        counterpart_id:
          type: string
          format: uuid
        commercial_condition_description:
          type: string
        entity_bank_account:
          $ref: '#/components/schemas/EntityBankAccountRequest'
        vat_exempt:
          type: boolean
        vat_exemption_rationale:
          type: string
        memo:
          type: string
          description: A note with additional information for a receivable
        payment_terms_id:
          type: string
          format: uuid
        payment_reminder_id:
          type: string
          format: uuid
    ReceivableFacadeCreatePayload:
      anyOf:
        - $ref: '#/components/schemas/ReceivableFacadeCreateQuotePayload'
        - $ref: '#/components/schemas/ReceivableFacadeCreateInvoicePayload'
        - $ref: '#/components/schemas/ReceivableCreateBasedOnPayload'
    ReceivableFacadeCreateQuotePayload:
      required:
        - type
        - currency
        - line_items
        - counterpart_id
      type: object
      properties:
        type:
          enum:
            - quote
          type: string
          description: The type of the document uploaded.
        expiry_date:
          type: string
          description: Time by which the quote is active. Timestamps follow the ISO 8601 standard.
          format: date-time
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        counterpart_id:
          type: string
          format: uuid
        commercial_condition_description:
          type: string
        entity_bank_account:
          $ref: '#/components/schemas/EntityBankAccountRequest'
        vat_exempt:
          type: boolean
        vat_exemption_rationale:
          type: string
        memo:
          type: string
          description: A note with additional information for a receivable
    ReceivablePreviewRequest:
      required:
        - subject_text
        - body_text
      type: object
      properties:
        subject_text:
          type: string
        body_text:
          type: string
      description: A schema for receiving a request for previewing an email with a receivable document
    ReceivablePreviewResponse:
      required:
        - subject_preview
        - body_preview
      type: object
      properties:
        subject_preview:
          type: string
        body_preview:
          type: string
      description: A schema for receiving a request for previewing an email with a receivable document
    ReceivableResponse:
      anyOf:
        - $ref: '#/components/schemas/QuoteResponsePayload'
        - $ref: '#/components/schemas/InvoiceResponsePayload'
    ReceivableSendRequest:
      required:
        - subject_text
        - body_text
      type: object
      properties:
        subject_text:
          type: string
        body_text:
          type: string
      description: A schema for receiving a request for sending a receivable
    ReceivableSendResponse:
      required:
        - mail_id
      type: object
      properties:
        mail_id:
          type: string
          format: uuid
      description: A schema for returning a response an email with a link to receivable document has been sent
    ReceivableType:
      enum:
        - quote
        - invoice
        - credit_note
      type: string
      description: An enumeration.
    ReceivableUpdatePayload:
      anyOf:
        - $ref: '#/components/schemas/UpdateQuotePayload'
        - $ref: '#/components/schemas/UpdateInvoicePayload'
      description: An abstract which provides interfaces for managing polymorphic schemas
    ReceivableVariablesResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            type: string
      description: A schema for returning a list of placeholders allowed to be placed in an email content
    ReceivablesStatusEnum:
      enum:
        - draft
        - issued
        - accepted
        - partially_paid
        - paid
        - expired
        - uncollectible
        - canceled
        - deleted
        - recurring
      type: string
      description: An enumeration.
    Recurrence:
      required:
        - invoice_id
        - start_year
        - start_month
        - end_year
        - end_month
        - day_of_month
        - id
        - created_at
        - updated_at
        - iterations
        - status
        - current_iteration
      type: object
      properties:
        invoice_id:
          type: string
          format: uuid
        start_year:
          maximum: 2077
          type: integer
        start_month:
          maximum: 12
          minimum: 1
          type: integer
        end_year:
          maximum: 2077
          type: integer
        end_month:
          maximum: 12
          minimum: 1
          type: integer
        day_of_month:
          $ref: '#/components/schemas/DayOfMonth'
        id:
          type: string
          format: uuid
        created_at:
          type: string
          description: Time at which the receivable was created. Timestamps follow the ISO 8601 standard.
          format: date-time
        updated_at:
          type: string
          description: Time at which the receivable was last updated. Timestamps follow the ISO 8601 standard.
          format: date-time
        iterations:
          type: array
          items:
            $ref: '#/components/schemas/RecurrenceIteration'
        status:
          $ref: '#/components/schemas/RecurrenceStatus'
        current_iteration:
          type: integer
    RecurrenceIteration:
      required:
        - issue_at
        - status
      type: object
      properties:
        issue_at:
          type: string
          format: date
        issued_invoice_id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/IterationStatus'
        iteration:
          type: integer
          default: 1
    RecurrenceStatus:
      enum:
        - active
        - canceled
        - completed
      type: string
      description: An enumeration.
    ResponseItem:
      required:
        - quantity
        - product
      type: object
      properties:
        quantity:
          minimum: 0
          type: integer
          description: The quantity of each of the goods, materials, or services listed in the receivable.
        product:
          $ref: '#/components/schemas/LineItemProduct'
    StatusEnum:
      enum:
        - active
        - deleted
      type: string
      description: An enumeration.
    TermFinalWithDate:
      required:
        - number_of_days
      type: object
      properties:
        number_of_days:
          maximum: 10000
          minimum: 0
          type: integer
          description: The amount of days after the invoice issue date.
        end_date:
          type: string
          format: date
    UnitListResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitResponse'
    UnitRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UnitResponse:
      required:
        - name
        - created_at
        - updated_at
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UnitUpdate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UpdateCounterpartContactPayload:
      type: object
      properties:
        first_name:
          type: string
          description: The first name of a contact person.
          example: Mary
        last_name:
          type: string
          description: The last name of a contact person.
          example: O'Brien
        email:
          type: string
          description: The email address of a contact person.
          format: email
          example: contact@example.org
        phone:
          type: string
          description: The phone number of a contact person
          example: '5551235476'
        is_default:
          type: boolean
          description: Specifies if this contact person is the default one in case the organization has multiple contacts.
        title:
          type: string
          description: 'The title or honorific of a contact person. Examples: Mr., Ms., Dr., Prof.'
          example: Ms.
        address:
          allOf:
            - $ref: '#/components/schemas/CounterpartAddress'
          description: The address of a contact person.
      description: The contact person for an organization.
    UpdateInvoice:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        counterpart_id:
          type: string
          format: uuid
        vat_exempt:
          type: boolean
        vat_exemption_rationale:
          type: string
        memo:
          type: string
          description: A note with additional information for a receivable
        payment_terms_id:
          type: string
          format: uuid
        payment_reminder_id:
          type: string
          format: uuid
    UpdateInvoicePayload:
      required:
        - invoice
      type: object
      properties:
        invoice:
          $ref: '#/components/schemas/UpdateInvoice'
      description: |-
        Helper class that provides a standard way to create an ABC using
        inheritance.
    UpdateQuote:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        counterpart_id:
          type: string
          format: uuid
        vat_exempt:
          type: boolean
        vat_exemption_rationale:
          type: string
        memo:
          type: string
          description: A note with additional information for a receivable
        expiry_date:
          type: string
          description: Time by which the quote is active. Timestamps follow the ISO 8601 standard.
          format: date-time
    UpdateQuotePayload:
      required:
        - quote
      type: object
      properties:
        quote:
          $ref: '#/components/schemas/UpdateQuote'
      description: |-
        Helper class that provides a standard way to create an ABC using
        inheritance.
    UpdateRecurrencePayload:
      type: object
      properties:
        end_year:
          maximum: 2077
          type: integer
        end_month:
          maximum: 12
          minimum: 1
          type: integer
        day_of_month:
          $ref: '#/components/schemas/DayOfMonth'
    ValidationError:
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          type: array
          items:
            type: string
        msg:
          type: string
        type:
          type: string
    VatClassListResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VatClassResponse'
    VatClassRequest:
      required:
        - value
        - country
      type: object
      properties:
        value:
          maximum: 10000
          minimum: 0
          type: integer
          description: 'Percent minor units. Example: 12.5% is 1250'
        country:
          $ref: '#/components/schemas/AllowedCountriesCodes'
    VatClassResponse:
      required:
        - value
        - country
        - created_at
        - updated_at
      type: object
      properties:
        value:
          maximum: 10000
          minimum: 0
          type: integer
          description: 'Percent minor units. Example: 12.5% is 1250'
        country:
          $ref: '#/components/schemas/AllowedCountriesCodes'
        id:
          type: string
          format: uuid
        inernal_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    api__v1__counterparts__pagination__CursorFields:
      enum:
        - counterpart_name
      type: string
      description: An enumeration.
    api__v1__products_services__pagination__CursorFields:
      enum:
        - name
      type: string
      description: An enumeration.
    api__v1__receivables__pagination__CursorFields:
      enum:
        - counterpart_name
        - amount
        - status
      type: string
      description: An enumeration.
    AccessTokenResponse:
      required:
        - access_token
        - token_type
        - expires_in
      type: object
      properties:
        access_token:
          type: string
          example: L8qq9PZyRg6ieKGEKhZolGC0vJWLw8iEJ88DRdyOg
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          example: 86400
    ActionEnum:
      enum:
        - create
        - read
        - update
        - delete
      type: string
      description: An enumeration.
    ActionSchema:
      type: object
      properties:
        action_name:
          allOf:
            - $ref: '#/components/schemas/ActionEnum'
          description: Action name
          default: read
        permission:
          allOf:
            - $ref: '#/components/schemas/PermissionEnum'
          description: Permission type
          default: allowed
    BizObjectsSchema:
      type: object
      properties:
        objects:
          type: array
          items:
            $ref: '#/components/schemas/RootSchema'
          description: List of objects
    CommonSchema:
      type: object
      properties:
        object_type:
          enum:
            - comment
            - entity_user
            - entity
            - entity_bank_account
            - export
            - reconciliation
            - role
            - todo_task
            - todo_task_mute
            - transaction
            - workflow
          type: string
          description: Object type
          default: comment
        actions:
          type: array
          items:
            $ref: '#/components/schemas/ActionSchema'
          description: List of actions
    CreateEntityRequest:
      anyOf:
        - $ref: '#/components/schemas/CreateOrganizationEntityRequest'
        - $ref: '#/components/schemas/CreateIndividualEntityRequest'
      description: A schema for a request to create an entity of different types
      discriminator:
        propertyName: type
        mapping:
          organization: '#/components/schemas/CreateOrganizationEntityRequest'
          individual: '#/components/schemas/CreateIndividualEntityRequest'
    CreateEntityUserRequest:
      required:
        - login
        - first_name
      type: object
      properties:
        login:
          type: string
        info:
          $ref: '#/components/schemas/EntityInfoSchema'
        role_id:
          type: string
          description: UUID of the role assigned to this entity user
          format: uuid
        first_name:
          type: string
          description: First name
          example: Andrey
        last_name:
          type: string
          description: Last name
          example: Korchak
        title:
          type: string
          description: Title
          example: Boss
    CreateIndividualEntityRequest:
      required:
        - address
        - email
        - type
        - individual
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/EntityAddressSchema'
          description: An address description of the entity
        email:
          type: string
          description: An official email address of the entity
          format: email
        phone:
          maxLength: 100
          type: string
          description: A phone number of the entity
        type:
          enum:
            - individual
          type: string
          description: A type for an organization
        individual:
          allOf:
            - $ref: '#/components/schemas/IndividualSchema'
          description: A set of meta data describing the individual
      description: A base for an entity request schema
    CreateOrganizationEntityRequest:
      required:
        - address
        - email
        - type
        - organization
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/EntityAddressSchema'
          description: An address description of the entity
        email:
          type: string
          description: An official email address of the entity
          format: email
        phone:
          maxLength: 100
          type: string
          description: A phone number of the entity
        type:
          enum:
            - organization
          type: string
          description: A type for an organization
        organization:
          allOf:
            - $ref: '#/components/schemas/OrganizationSchema'
          description: A set of meta data describing the organization
      description: A base for an entity request schema
    CreateRoleRequest:
      required:
        - name
        - permissions
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: Role name
        permissions:
          allOf:
            - $ref: '#/components/schemas/BizObjectsSchema'
          description: Access permissions
    CurrencySettings:
      required:
        - default
      type: object
      properties:
        default:
          $ref: '#/components/schemas/CurrencyEnum'
        exchange_rates:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeRate'
    EntityBankAccountPaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EntityBankAccountResponse'
          description: List of entity bank accounts.
        prev_pagination_token:
          type: string
          description: Optional querystring with pagination parameters, null if there is no page.
        next_pagination_token:
          type: string
          description: Optional querystring with pagination parameters, null if there is no page.
      description: A paginated list of entity bank accounts
    EntityBankAccountResponse:
      required:
        - id
        - iban
        - bic
        - bank_name
      type: object
      properties:
        id:
          type: string
          format: uuid
        iban:
          type: string
          description: The IBAN of the entity’s bank account.
        bic:
          type: string
          description: The BIC of the entity’s bank account.
        bank_name:
          type: string
          description: The name of the entity’s bank account.
        display_name:
          type: string
        was_created_by_user_id:
          type: string
          format: uuid
    EntityIndividualResponse:
      required:
        - address
        - email
        - created_at
        - id
        - status
        - updated_at
        - type
        - individual
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/EntityAddressSchema'
          description: An address description of the entity
        email:
          type: string
          description: An official email address of the entity
          format: email
        phone:
          maxLength: 100
          type: string
          description: A phone number of the entity
        created_at:
          type: string
          description: UTC datetime
          format: date-time
        id:
          type: string
          description: UUID entity ID
          format: uuid
        logo:
          allOf:
            - $ref: '#/components/schemas/FileSchema'
          description: A logo image of the entity
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: record status, 'active' by default
        updated_at:
          type: string
          description: UTC datetime
          format: date-time
        type:
          enum:
            - individual
          type: string
          description: A type for an individual
        individual:
          allOf:
            - $ref: '#/components/schemas/IndividualSchema'
          description: A set of metadata describing an individual
      description: A base for an entity response schema
    EntityInfoSchema:
      type: object
      properties:
        email:
          type: string
          description: An entity user business email
          format: email
        phone:
          type: string
          description: An entity user phone number in the international format
      description: A scheme for validation an entity user additional info
    EntityOrganizationResponse:
      required:
        - address
        - email
        - created_at
        - id
        - status
        - updated_at
        - type
        - organization
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/EntityAddressSchema'
          description: An address description of the entity
        email:
          type: string
          description: An official email address of the entity
          format: email
        phone:
          maxLength: 100
          type: string
          description: A phone number of the entity
        created_at:
          type: string
          description: UTC datetime
          format: date-time
        id:
          type: string
          description: UUID entity ID
          format: uuid
        logo:
          allOf:
            - $ref: '#/components/schemas/FileSchema'
          description: A logo image of the entity
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: record status, 'active' by default
        updated_at:
          type: string
          description: UTC datetime
          format: date-time
        type:
          enum:
            - organization
          type: string
          description: A type for an organization
        organization:
          allOf:
            - $ref: '#/components/schemas/OrganizationSchema'
          description: A set of metadata describing an organization
      description: A base for an entity response schema
    EntityPaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EntityResponse'
          description: A set of entities of different types returned per page
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
    EntityResponse:
      anyOf:
        - $ref: '#/components/schemas/EntityOrganizationResponse'
        - $ref: '#/components/schemas/EntityIndividualResponse'
      description: A schema for a response after creation of an entity of different types
      discriminator:
        propertyName: type
        mapping:
          organization: '#/components/schemas/EntityOrganizationResponse'
          individual: '#/components/schemas/EntityIndividualResponse'
    EntityTypeEnum:
      enum:
        - individual
        - organization
      type: string
      description: An enumeration.
    EntityUserPaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EntityUserResponse'
          description: array of records
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
    EntityUserResponse:
      required:
        - id
        - login
        - status
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
          description: UUID entity user ID
          format: uuid
        role:
          allOf:
            - $ref: '#/components/schemas/RoleResponse'
          description: Role assigned to this entity user
        userpic:
          $ref: '#/components/schemas/FileSchema'
        info:
          $ref: '#/components/schemas/EntityInfoSchema'
        login:
          type: string
          description: Login
          example: Meme Lord
        first_name:
          type: string
          description: First name
        last_name:
          type: string
          description: Last name
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: record status, 'active' by default
        created_at:
          type: string
          description: UTC datetime
          format: date-time
        updated_at:
          type: string
          description: UTC datetime
          format: date-time
    ExchangeRate:
      required:
        - base
        - to
        - rate
      type: object
      properties:
        base:
          type: string
          example: USD
        to:
          type: string
          example: EUR
        rate:
          minimum: 0
          exclusiveMinimum: true
          type: number
          example: 0.98
    FileSchema:
      required:
        - id
        - created_at
        - file_type
        - name
        - region
        - md5
        - mimetype
        - url
        - size
      type: object
      properties:
        id:
          type: string
          description: A unique ID of this file.
          format: uuid
        created_at:
          type: string
          description: UTC date and time when this workflow was uploaded to Monite. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
          format: date-time
        file_type:
          type: string
          description: The type of the business object associated with this file.
          example: payables
        name:
          type: string
          description: The original file name (if available).
          example: invoice.pdf
        region:
          type: string
          description: Geographical region of the data center where the file is stored.
          example: eu-central-1
        md5:
          type: string
          description: The MD5 hash of the file.
          example: 31d1a2dd1ad3dfc39be849d70a68dac0
        mimetype:
          type: string
          description: The file's [media type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types).
          example: application/pdf
        url:
          type: string
          description: The URL to download the file.
          example: https://bucketname.s3.amazonaws.com/12345/67890.pdf
        size:
          minimum: 0
          type: integer
          description: The file size in bytes.
          example: 24381
        previews:
          type: array
          items:
            $ref: '#/components/schemas/PreviewSchema'
          description: Preview images generated for this file. There can be multiple images with different sizes.
          default: []
        pages:
          type: array
          items:
            $ref: '#/components/schemas/PageSchema'
          description: If the file is a PDF document, this property contains individual pages extracted from the file. Otherwise, an empty array.
          default: []
      description: Represents a file (such as a PDF invoice) that was uploaded to Monite.
    GrantType:
      enum:
        - client_credentials
        - entity_user
      type: string
      description: An enumeration.
    IndividualSchema:
      required:
        - first_name
        - last_name
      type: object
      properties:
        first_name:
          maxLength: 100
          type: string
          description: A first name of an individual
        last_name:
          maxLength: 100
          type: string
          description: A last name of an individual
        vat_id:
          maxLength: 15
          type: string
          description: A VAT number of the entity which points to the registered tax applied for a service price
        tax_id:
          maxLength: 30
          type: string
          description: An identification number of the legal entity
        title:
          maxLength: 10
          type: string
          description: A title of an individual
      description: A schema contains metadata for an individual
    MessageResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    ObtainTokenPayload:
      required:
        - grant_type
        - client_id
        - client_secret
      type: object
      properties:
        grant_type:
          $ref: '#/components/schemas/GrantType'
        client_id:
          type: string
          format: uuid
        client_secret:
          type: string
        entity_user_id:
          type: string
          format: uuid
    OptionalIndividualSchema:
      type: object
      properties:
        first_name:
          maxLength: 100
          type: string
          description: A first name of an individual
        last_name:
          maxLength: 100
          type: string
          description: A last name of an individual
        vat_id:
          maxLength: 15
          type: string
          description: A VAT number of the entity which points to the registered tax applied for a service price
        tax_id:
          maxLength: 30
          type: string
          description: An identification number of the legal entity
        title:
          maxLength: 10
          type: string
          description: A title of an individual
      description: A schema for metadata for updating an individual
    OptionalOrganizationSchema:
      type: object
      properties:
        legal_name:
          maxLength: 255
          type: string
          description: A legal name of an organization
        vat_id:
          maxLength: 15
          type: string
          description: A VAT number of the entity which points to the registered tax applied for a service price
        legal_entity_id:
          maxLength: 20
          type: string
          description: A code which identifies uniquely a party of a transaction worldwide
      description: A schema contains metadata for updating an organization
    OrganizationSchema:
      required:
        - legal_name
        - vat_id
      type: object
      properties:
        legal_name:
          maxLength: 255
          type: string
          description: A legal name of an organization
        vat_id:
          maxLength: 15
          type: string
          description: A VAT number of the entity which points to the registered tax applied for a service price
        legal_entity_id:
          maxLength: 20
          type: string
          description: A code which identifies uniquely a party of a transaction worldwide
      description: A schema contains metadata for an organization
    PageSchema:
      required:
        - id
        - mimetype
        - size
        - number
        - url
      type: object
      properties:
        id:
          type: string
          description: A unique ID of the image.
          format: uuid
        mimetype:
          type: string
          description: The [media type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the image.
          example: image/png
        size:
          minimum: 0
          type: integer
          description: Image file size, in bytes.
          example: 21972
        number:
          minimum: 0
          type: integer
          description: The page number in the PDF document, from 0.
          example: 0
        url:
          type: string
          description: The URL to download the image.
          example: https://bucket.s3.amazonaws.com/123/456.png
      description: |-
        When a PDF document is uploaded to Monite, it extracts individual pages from the document
        and saves them as PNG images. This object contains the image and metadata of a single page.
    PartnerProjectSettingsPayload:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencySettings'
        payable:
          $ref: '#/components/schemas/PayableSettings'
        receivable:
          $ref: '#/components/schemas/ReceivableSettings'
        commercial_conditions:
          type: array
          items:
            type: string
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        website:
          type: string
    PartnerProjectSettingsResponse:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencySettings'
        payable:
          $ref: '#/components/schemas/PayableSettings'
        receivable:
          $ref: '#/components/schemas/ReceivableSettings'
        commercial_conditions:
          type: array
          items:
            type: string
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        website:
          type: string
    PatchSettingsPayload:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencySettings'
        reminder:
          $ref: '#/components/schemas/RemindersSettings'
        template:
          $ref: '#/components/schemas/TemplateSettings'
        payment_priority:
          allOf:
            - $ref: '#/components/schemas/PaymentPriorityEnum'
          description: Payment preferences for entity to automate calculating suggested payment date basing on payment terms and entity preferences
          default: working_capital
    PayableActionEnum:
      enum:
        - create
        - read
        - update
        - delete
        - pay
        - approve
        - submit
      type: string
      description: An enumeration.
    PayableActionSchema:
      type: object
      properties:
        action_name:
          allOf:
            - $ref: '#/components/schemas/PayableActionEnum'
          description: Action name
          default: read
        permission:
          allOf:
            - $ref: '#/components/schemas/PermissionEnum'
          description: Permission type
          default: allowed
    PayableSchema:
      type: object
      properties:
        object_type:
          enum:
            - payable
          type: string
          description: Object type
          default: payable
        actions:
          type: array
          items:
            $ref: '#/components/schemas/PayableActionSchema'
          description: List of actions
    PayableSettings:
      required:
        - approve_page_url
      type: object
      properties:
        approve_page_url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
          example: https://monite.com
    PaymentPriorityEnum:
      enum:
        - working_capital
        - balanced
        - bottom_line
      type: string
      description: An enumeration.
    PermissionEnum:
      enum:
        - allowed
        - allowed_for_own
        - not_allowed
      type: string
      description: An enumeration.
    PreviewSchema:
      required:
        - url
        - width
        - height
      type: object
      properties:
        url:
          type: string
          description: The image URL.
          example: https://bucketname.s3.amazonaws.com/1/2/3.png
        width:
          type: integer
          description: The image width in pixels.
          example: 200
        height:
          type: integer
          description: The image height in pixels.
          example: 400
      description: A preview image generated for a file.
    ReceivableSettings:
      required:
        - create_without_personal_info
      type: object
      properties:
        create_without_personal_info:
          type: boolean
    RemindersSettings:
      required:
        - excluded_counterpart_ids
      type: object
      properties:
        enabled:
          type: boolean
          default: true
        excluded_counterpart_ids:
          type: array
          items:
            type: string
            format: uuid
          description: Counterparts UUID's for which reminders will be turned off
    RevokeTokenPayload:
      required:
        - client_id
        - client_secret
        - token
      type: object
      properties:
        client_id:
          type: string
          format: uuid
        client_secret:
          type: string
        token:
          type: string
    RolePaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RoleResponse'
          description: array of records
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
    RoleResponse:
      required:
        - id
        - name
        - permissions
        - status
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
          description: UUID role ID
          format: uuid
        name:
          minLength: 1
          type: string
          description: Role name
        permissions:
          allOf:
            - $ref: '#/components/schemas/BizObjectsSchema'
          description: Access permissions
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: record status, 'active' by default
        created_at:
          type: string
          description: UTC datetime
          format: date-time
        updated_at:
          type: string
          description: UTC datetime
          format: date-time
    RootSchema:
      anyOf:
        - $ref: '#/components/schemas/CommonSchema'
        - $ref: '#/components/schemas/PayableSchema'
      description: An abstract which provides interfaces for managing polymorphic schemas
      discriminator:
        propertyName: object_type
        mapping:
          comment: '#/components/schemas/CommonSchema'
          entity_user: '#/components/schemas/CommonSchema'
          entity: '#/components/schemas/CommonSchema'
          entity_bank_account: '#/components/schemas/CommonSchema'
          export: '#/components/schemas/CommonSchema'
          reconciliation: '#/components/schemas/CommonSchema'
          role: '#/components/schemas/CommonSchema'
          todo_task: '#/components/schemas/CommonSchema'
          todo_task_mute: '#/components/schemas/CommonSchema'
          transaction: '#/components/schemas/CommonSchema'
          workflow: '#/components/schemas/CommonSchema'
          payable: '#/components/schemas/PayableSchema'
    SearchEntitiesPayload:
      type: object
      properties:
        id__in:
          type: array
          items:
            type: string
            format: uuid
        id__not_in:
          type: array
          items:
            type: string
            format: uuid
        entity_id:
          type: string
          format: uuid
        role__permissions__contains:
          type: string
          format: uuid
        role_id:
          type: string
          format: uuid
        login:
          type: string
        status:
          type: string
    SearchRolesPayload:
      type: object
      properties:
        id__in:
          type: array
          items:
            type: string
            format: uuid
        entity_id:
          type: string
          format: uuid
    SettingsResponse:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencySettings'
        reminder:
          $ref: '#/components/schemas/RemindersSettings'
        template:
          $ref: '#/components/schemas/TemplateSettings'
        payment_priority:
          allOf:
            - $ref: '#/components/schemas/PaymentPriorityEnum'
          description: Payment preferences for entity to automate calculating suggested payment date basing on payment terms and entity preferences
          default: working_capital
    TemplateSettings:
      required:
        - receivables_pdf_template_id
      type: object
      properties:
        receivables_pdf_template_id:
          type: string
          format: uuid
    Unit:
      required:
        - name
        - designation
      type: object
      properties:
        name:
          type: string
          example: CPA
        designation:
          type: string
          example: Certified Public Accountant
    UpdateEntityBankAccountRequest:
      type: object
      properties:
        iban:
          maxLength: 34
          type: string
          description: The IBAN of the entity’s bank account.
        bic:
          maxLength: 11
          type: string
          description: The BIC of the entity’s bank account.
        bank_name:
          type: string
          description: The name of the entity’s bank account.
        display_name:
          type: string
    UpdateEntityRequest:
      anyOf:
        - $ref: '#/components/schemas/UpdateOrganizationEntityRequest'
        - $ref: '#/components/schemas/UpdateIndividualEntityRequest'
      description: A schema for a request to update an entity
    UpdateEntityUserRequest:
      type: object
      properties:
        role_id:
          type: string
          description: UUID of the role assigned to this entity user
          format: uuid
        first_name:
          type: string
          description: First name
          example: Andrey
        last_name:
          type: string
          description: Last name
          example: Korchak
        title:
          type: string
          description: Title
          example: Boss
        login:
          type: string
          description: Login
          example: Meme Lord
        info:
          $ref: '#/components/schemas/EntityInfoSchema'
    UpdateIndividualEntityRequest:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/EntityAddressSchema'
          description: An address description of the entity
        email:
          type: string
          description: An official email address of the entity
          format: email
        phone:
          maxLength: 100
          type: string
          description: A phone number of the entity
        individual:
          allOf:
            - $ref: '#/components/schemas/OptionalIndividualSchema'
          description: A set of meta data describing the individual
      description: A base for entity related schemas of different types
    UpdateOrganizationEntityRequest:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/EntityAddressSchema'
          description: An address description of the entity
        email:
          type: string
          description: An official email address of the entity
          format: email
        phone:
          maxLength: 100
          type: string
          description: A phone number of the entity
        organization:
          allOf:
            - $ref: '#/components/schemas/OptionalOrganizationSchema'
          description: A set of meta data describing the organization
      description: A base for entity related schemas of different types
    UpdateRoleRequest:
      type: object
      properties:
        name:
          type: string
          description: Role name
        permissions:
          allOf:
            - $ref: '#/components/schemas/BizObjectsSchema'
          description: Access permissions
    api__v1__entities__pagination__CursorFields:
      enum:
        - created_at
        - updated_at
      type: string
      description: An enumeration.
    api__v1__entity_users__pagination__CursorFields:
      enum:
        - updated_at
      type: string
      description: An enumeration.
    api__v1__roles__pagination__CursorFields:
      enum:
        - updated_at
      type: string
      description: An enumeration.
    ApprovalResponse:
      required:
        - id
        - object_type
        - object_id
        - action_name
        - status
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
          format: uuid
        object_type:
          $ref: '#/components/schemas/ObjectType'
        object_id:
          type: string
          format: uuid
        action_name:
          type: string
        status:
          $ref: '#/components/schemas/ApprovalStatusEnum'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ApprovalStatusEnum:
      enum:
        - active
        - approved
        - rejected
        - discarded
      type: string
      description: An enumeration.
    Body_upload_new_payable_payables_post:
      required:
        - file
      type: object
      properties:
        file:
          type: string
          format: binary
    CommentPayload:
      type: object
      properties:
        comment:
          type: string
          description: An arbitrary comment that describes how and when this payable was paid.
    CommentSchema:
      required:
        - id
        - entity_id
        - status
        - entity_user_id
        - object_id
        - object_type
        - text
      type: object
      properties:
        id:
          type: string
          format: uuid
        entity_id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/StatusEnum'
        entity_user_id:
          type: string
          format: uuid
        api_user_id:
          type: string
          format: uuid
        partner_id:
          type: string
          format: uuid
        object_id:
          type: string
        object_type:
          type: string
        text:
          type: string
        mentions:
          type: array
          items:
            $ref: '#/components/schemas/MentionSchema'
        replies_to:
          type: string
          format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/FileSchema'
        edited_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
    CreateExportTaskResponseSchema:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    CreateUpdateCommentSchema:
      required:
        - text
      type: object
      properties:
        text:
          type: string
    CreateWorkflowSchema:
      required:
        - policy_name
      type: object
      properties:
        policy_name:
          maxLength: 255
          type: string
          description: The name of this workflow (approval policy).
          example: Expense approval
        policy_description:
          maxLength: 500
          type: string
          description: An arbitrary description of this workflow (approval policy).
        workflow:
          type: object
          description: The workflow definition in the [Monite script](https://docs.monite.com/docs/monite-script) format (as JSON).
          default: {}
          example:
            trigger:
              version: 1
              object_type: payable
              action: create
              currency: EUR
            functions:
              - call:
                  method: Payables.request_approval_by_entity_user
                  params:
                    entity_user_ids:
                      - 5f3196d2-48ce-4c1e-b29e-c3e5d1fb7a13
      description: |-
        A Workflow object represents an approval policy for payable status transitions.
        Workflows are defined using the [Monite script](https://docs.monite.com/docs/monite-script).
        Each workflow consists of trigger conditions and the function calls executed when the workflow is triggered.
    CurrencyExchangeSchema:
      required:
        - default_currency_code
        - rate
        - total
      type: object
      properties:
        default_currency_code:
          type: string
        rate:
          minimum: 0
          exclusiveMinimum: true
          type: integer
        total:
          type: integer
    DocumentExportResponseSchema:
      required:
        - entity_id
        - count
        - id
        - language
        - status
        - format
      type: object
      properties:
        source_url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        entity_id:
          type: string
          format: uuid
        start_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
        count:
          type: integer
        id:
          type: string
          format: uuid
        language:
          type: string
        status:
          type: string
        created_by_entity_user_id:
          type: string
          format: uuid
        format:
          type: string
    ExportFormat:
      enum:
        - csv
        - pdf
      type: string
      description: An enumeration.
    ExportObjectSchema:
      anyOf:
        - $ref: '#/components/schemas/ExportPayableSchema'
        - $ref: '#/components/schemas/ExportReceivableSchema'
      discriminator:
        propertyName: name
        mapping:
          payable: '#/components/schemas/ExportPayableSchema'
          receivable: '#/components/schemas/ExportReceivableSchema'
    ExportPayableSchema:
      required:
        - name
        - statuses
      type: object
      properties:
        name:
          enum:
            - payable
          type: string
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/PayableStateEnum'
    ExportPayloadSchema:
      required:
        - format
        - objects
        - date_from
        - date_to
      type: object
      properties:
        format:
          $ref: '#/components/schemas/ExportFormat'
        objects:
          type: array
          items:
            $ref: '#/components/schemas/ExportObjectSchema'
        date_from:
          type: string
          format: date
        date_to:
          type: string
          format: date
    ExportReceivableSchema:
      required:
        - name
        - statuses
      type: object
      properties:
        name:
          enum:
            - receivable
          type: string
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/ReceivablesStatusEnum'
    Item:
      required:
        - text
        - confidence
      type: object
      properties:
        text:
          type: string
          description: The text as recognized by OCR.
          example: €1,125.00
        confidence:
          maximum: 100
          minimum: 0
          type: number
          description: OCR confidence score - the estimated accuracy percentage of character recognition of the extracted text, from 0 to 100%.
          example: 96.238
        processed_text:
          anyOf:
            - type: integer
            - type: number
            - type: string
              format: date-time
            - type: string
          description: |-
            If the `text` value is identified as a currency amount or a date, `processed_text` contains this value converted to a common format:

            * Currency amounts (such as the total, subtotal, tax/VAT, line item prices) are converted to numbers with the currency character removed. For example, "€1,125.00" becomes 1125.0.* Dates are converted to the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, `YYYY-MM-DDThh:mm:ss`. For example, "26/3/2021" becomes "2021-03-26T00:00:00".

            If `text` is not a currency amount or a date, `processed_text` is `null`.
          example: 1125
      description: Contains information about a text block or line extracted from an uploaded document by OCR.
    LabelNValue:
      required:
        - label
        - value
      type: object
      properties:
        label:
          allOf:
            - $ref: '#/components/schemas/Item'
          description: Text label.
          example:
            text: total
            confidence: 99.799
        value:
          allOf:
            - $ref: '#/components/schemas/Item'
          description: The value (if any).
      description: |-
        A label-value pair extracted from an uploaded document by OCR.
        For example, the label could be "Total" and the value could be a currency amount.
    MentionSchema:
      required:
        - visible_name
        - group
        - recipient
      type: object
      properties:
        visible_name:
          type: string
        group:
          type: string
        recipient:
          type: string
    ObjectType:
      enum:
        - partner
        - partner_internal_config
        - partner_token
        - partner_settings
        - approval
        - comment
        - export
        - entity
        - entity_settings
        - entity_token
        - entity_user
        - entity_user_token
        - entity_bank_account
        - payable
        - receivable
        - reconciliation
        - role
        - todo_task
        - todo_task_mute
        - transaction
        - workflow
        - workflow_pipeline
        - counterpart
        - counterpart_bank_account
        - counterpart_contact_person
        - webhook
        - audit_trail
        - payment_reminder
        - recurrence
        - tag
      type: string
      description: An enumeration.
    ObjectTypeAvailableComment:
      enum:
        - payable
      description: An enumeration.
    ObjectTypeEnum:
      enum:
        - payable
      type: string
      description: An enumeration.
    OcrRecognitionResponse:
      type: object
      properties:
        summary:
          type: array
          items:
            $ref: '#/components/schemas/LabelNValue'
          description: Invoice text content other than the line items. Such as the invoice issue and due dates, vendor name and address, and other general information.
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LabelNValue'
          description: Text content of the invoice line items as recognized by OCR.
      description: |-
        Contains information about all text blocks extracted from an uploaded invoice by OCR.
        The text blocks are grouped into `line_items` (invoice line items) and `summary` (all other information).
    PaginatedApprovalResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalResponse'
        next_pagination_token:
          type: string
        prev_pagination_token:
          type: string
    PaginatedTodoTask:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TodoTask'
        next_pagination_token:
          type: string
        prev_pagination_token:
          type: string
    PayableOriginEnum:
      enum:
        - upload
        - email
      type: string
      description: An enumeration.
    PayablePendingActionEnum:
      enum:
        - pay
        - approve
      type: string
      description: An enumeration.
    PayablePendingActionResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayablePendingActionSchema'
    PayablePendingActionSchema:
      required:
        - action_type
        - object_id
        - object_type
      type: object
      properties:
        action_type:
          $ref: '#/components/schemas/PayablePendingActionEnum'
        object_id:
          type: string
          format: uuid
        object_type:
          $ref: '#/components/schemas/ObjectTypeEnum'
    PayableResponseSchema:
      required:
        - id
        - entity_id
        - status
        - source_of_payable_data
        - payable_origin
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
          description: A unique ID assigned to this payable.
          format: uuid
        entity_id:
          type: string
          description: The ID of the entity to which the payable was issued.
          format: uuid
        marked_as_paid_with_comment:
          type: string
          description: An arbitrary comment that describes how and when this payable was paid.
          example: Was paid partly in the end of the month.
        marked_as_paid_by_entity_user_id:
          type: string
          description: The ID of the entity user who marked this document as paid.
          format: uuid
          example: 71e8875a-43b3-434f-b12a-54c84c176ef3
        status:
          allOf:
            - $ref: '#/components/schemas/PayableStateEnum'
          description: The [status](https://docs.monite.com/docs/payables-lifecycle) of the payable.
        source_of_payable_data:
          allOf:
            - $ref: '#/components/schemas/SourceOfPayableDataEnum'
          description: 'Specifies how the property values of this payable were provided: `ocr` - Monite OCR service extracted the values from the provided PDF or image file, `user_specified` - values were added or updated via an API call.'
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: The [currency code](https://docs.monite.com/docs/currencies) of the currency used in the payable.
          example: EUR
        amount:
          type: integer
          description: The total amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1250
        description:
          type: string
          description: An arbitrary description of this payable.
        due_date:
          type: string
          description: The date by which the payable must be paid, in the YYYY-MM-DD format. If the payable specifies payment terms with early payment discounts, this is the final payment date.
          format: date
        payment_terms:
          allOf:
            - $ref: '#/components/schemas/PaymentTermsCreatePayload'
          description: The number of days to pay with potential discount for options shorter than due_date
        suggested_payment_term:
          allOf:
            - $ref: '#/components/schemas/SuggestedPaymentTerm'
          description: The suggested date and corresponding discount in which payable could be paid. The date is in the YYYY-MM-DD format. The discount is calculated as X * (10^-4) - for example, 100 is 1%, 25 is 0,25%, 10000 is 100 %. Date varies depending on the payment terms and may even be equal to the due date with discount 0.
        issued_at:
          type: string
          description: The date when the payable was issued, in the YYYY-MM-DD format.
          format: date
        counterpart_bank_id:
          type: string
          description: SWIFT code (BIC) of the vendor's bank (if specified in the payable document).
          example: DEUTDE2HXXX
        counterpart_id:
          type: string
          description: The ID of the counterpart object that represents the vendor or supplier.
          format: uuid
        counterpart_account_id:
          type: string
          description: Vendor's bank account number, IBAN, or similar (if specified in the payable document).
          example: '123456789012'
        counterpart_name:
          type: string
          description: Vendor or supplier name.
          example: Acme Inc.
        payable_origin:
          allOf:
            - $ref: '#/components/schemas/PayableOriginEnum'
          description: 'Specifies how this payable was created in Monite: `upload` - created via an API call, `email` - sent via email to the entity''s mailbox.'
        was_created_by_user_id:
          type: string
          format: uuid
        was_created_by_external_user_name:
          type: string
        was_created_by_external_user_id:
          type: string
        currency_exchange:
          $ref: '#/components/schemas/CurrencyExchangeSchema'
        file:
          allOf:
            - $ref: '#/components/schemas/FileSchema'
          description: The original file from which this payable was created.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagReadSchema'
          description: A list of user-defined tags (labels) assigned to this payable. Tags can be used to trigger a specific approval policy for this payable.
        created_at:
          type: string
          description: UTC date and time when this payable was created. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
          format: date-time
        updated_at:
          type: string
          description: UTC date and time when this payable was last updated. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
          format: date-time
        other_extracted_data:
          allOf:
            - $ref: '#/components/schemas/OcrRecognitionResponse'
          description: Data extracted from the uploaded payable by OCR.
        applied_policy:
          type: string
          description: The name of an existing workflow (approval policy) that applies to this payable, if any. A workflow is applied if the payable matches the workflow trigger conditions.
        document_id:
          type: string
          description: A unique invoice number assigned by the invoice issuer for payment tracking purposes. This is different from `id` which is an internal ID created automatically by Monite.
          example: DE2287
        subtotal:
          type: integer
          description: The subtotal amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1250
        tax:
          type: integer
          description: Registered tax applied for a service price, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1900
          format: int99
      description: Represents an Accounts Payable document received from a vendor or supplier.
    PayableStateEnum:
      enum:
        - new
        - approve_in_progress
        - waiting_to_be_paid
        - paid
        - canceled
        - rejected
      type: string
      description: An enumeration.
    PayableUpdateSchema:
      type: object
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: The [currency code](https://docs.monite.com/docs/currencies) of the currency used in the payable.
          example: EUR
        amount:
          type: integer
          description: The total amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1250
        description:
          type: string
          description: An arbitrary description of this payable.
        due_date:
          type: string
          description: The date by which the payable must be paid, in the YYYY-MM-DD format. If the payable specifies payment terms with early payment discounts, this is the final payment date.
          format: date
        payment_terms:
          allOf:
            - $ref: '#/components/schemas/PaymentTermsCreatePayload'
          description: The number of days to pay with potential discount for options shorter than due_date
        suggested_payment_term:
          allOf:
            - $ref: '#/components/schemas/SuggestedPaymentTerm'
          description: The suggested date and corresponding discount in which payable could be paid. The date is in the YYYY-MM-DD format. The discount is calculated as X * (10^-4) - for example, 100 is 1%, 25 is 0,25%, 10000 is 100 %. Date varies depending on the payment terms and may even be equal to the due date with discount 0.
        issued_at:
          type: string
          description: The date when the payable was issued, in the YYYY-MM-DD format.
          format: date
        counterpart_bank_id:
          type: string
          description: SWIFT code (BIC) of the vendor's bank.
          example: DEUTDE2HXXX
        counterpart_id:
          type: string
          description: The ID of the counterpart object that represents the vendor or supplier.
          format: uuid
        counterpart_account_id:
          type: string
          description: Vendor's bank account number, IBAN, or similar.
          example: '123456789012'
        counterpart_name:
          type: string
          description: Vendor or supplier name.
          example: Acme Inc.
        tag_ids:
          type: array
          items:
            type: string
          description: A list of IDs of user-defined tags (labels) assigned to this payable. Tags can be used to trigger a specific approval policy for this payable.
        document_id:
          type: string
          description: A unique invoice number assigned by the invoice issuer for payment tracking purposes.
          example: DE2287
        subtotal:
          type: integer
          description: The subtotal amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1250
        tax:
          type: integer
          description: Registered tax applied for a service price, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1900
      description: This schema is used to update the data of an existing payable.
    PayableUploadWithDataSchema:
      required:
        - base64_encoded_file
      type: object
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: The [currency code](https://docs.monite.com/docs/currencies) of the currency used in the payable.
          example: EUR
        amount:
          type: integer
          description: The total amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1250
        description:
          type: string
          description: An arbitrary description of this payable.
        due_date:
          type: string
          description: The date by which the payable must be paid, in the YYYY-MM-DD format. If the payable specifies payment terms with early payment discounts, this is the final payment date.
          format: date
        payment_terms:
          allOf:
            - $ref: '#/components/schemas/PaymentTermsCreatePayload'
          description: The number of days to pay with potential discount for options shorter than due_date
        suggested_payment_term:
          allOf:
            - $ref: '#/components/schemas/SuggestedPaymentTerm'
          description: The suggested date and corresponding discount in which payable could be paid. The date is in the YYYY-MM-DD format. The discount is calculated as X * (10^-4) - for example, 100 is 1%, 25 is 0,25%, 10000 is 100 %. Date varies depending on the payment terms and may even be equal to the due date with discount 0.
        issued_at:
          type: string
          description: The date when the payable was issued, in the YYYY-MM-DD format.
          format: date
        counterpart_bank_id:
          type: string
          description: SWIFT code (BIC) of the vendor's bank.
          example: DEUTDE2HXXX
        counterpart_account_id:
          type: string
          description: Vendor's bank account number, IBAN, or similar.
          example: '123456789012'
        counterpart_name:
          type: string
          description: Vendor or supplier name.
          example: Acme Inc.
        base64_encoded_file:
          type: string
          description: |-
            Base64-encoded contents of the original issued payable. The file is provided for reference purposes as the original source of the data.

             Any file formats are allowed. The most common formats are PDF, PNG, JPG, GIF.
        tag_ids:
          type: array
          items:
            type: string
            format: uuid
          description: A list of IDs of user-defined tags (labels) assigned to this payable. Tags can be used to trigger a specific approval policy for this payable.
        document_id:
          type: string
          description: A unique invoice number assigned by the invoice issuer for payment tracking purposes.
          example: DE2287
        subtotal:
          type: integer
          description: The subtotal amount to be paid, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1250
        tax:
          type: integer
          description: Registered tax applied for a service price, in [minor units](https://docs.monite.com/docs/currencies#minor-units). For example, $12.50 is represented as 1250.
          example: 1900
      description: This schema is used to create a new payable by providing its data along with the original file.
    PipelineResponseSchema:
      required:
        - id
        - object_type
        - object_id
        - status
        - workflow_id
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
          format: uuid
        object_type:
          type: string
        object_id:
          type: string
          format: uuid
        error_text:
          type: string
        status:
          $ref: '#/components/schemas/api__schemas__workflows__enums__WorkflowPipelineStatusEnum'
        workflow_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PipelinesPaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PipelineResponseSchema'
          description: A paginated list of pipelines.
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
    SourceOfPayableDataEnum:
      enum:
        - ocr
        - user_specified
      type: string
      description: An enumeration.
    SuggestedPaymentTerm:
      required:
        - date
      type: object
      properties:
        date:
          type: string
          format: date
        discount:
          maximum: 10000
          minimum: 0
          type: integer
      description: Suggested payment date and corresponding discount
    SupportedFormatSchema:
      required:
        - object_type
        - available_types
      type: object
      properties:
        object_type:
          enum:
            - payable
            - receivable
          type: string
        available_types:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ExportFormat'
    TagCreateOrUpdateSchema:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: The tag name.
          example: Marketing
    TagReadSchema:
      required:
        - name
        - id
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: The tag name.
          example: Marketing
        id:
          type: string
          description: A unique ID of this tag.
          format: uuid
      description: Represents a user-defined tag that can be assigned to payables to filter them.
    TagsResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TagReadSchema'
      description: A list of Tags.
    TasksCountSchema:
      required:
        - status
        - count
      type: object
      properties:
        status:
          type: string
        count:
          type: integer
    TodoTask:
      required:
        - id
        - oid
        - entity_user_id
        - status
        - viewed
        - object_type
        - action
      type: object
      properties:
        id:
          type: string
          format: uuid
        oid:
          type: integer
        entity_user_id:
          type: string
          format: uuid
        status:
          type: string
        viewed:
          type: boolean
        object_id:
          type: string
        object_type:
          type: string
        action:
          type: string
        performed_by_user_id:
          type: string
    TodoTaskStatusEnum:
      enum:
        - active
        - muted
        - completed
        - discarded
      type: string
      description: An enumeration.
    UpdateTodoTask:
      type: object
      properties:
        mute:
          type: boolean
          default: false
        viewed:
          type: boolean
          default: false
    WorkflowResponseSchema:
      required:
        - id
        - created_by_entity_user
        - object_type
        - policy_name
        - workflow
        - trigger
        - action
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
          description: A unique ID of this workflow.
          format: uuid
        created_by_entity_user:
          allOf:
            - $ref: '#/components/schemas/EntityUserResponse'
          description: Data of the entity user that created this workflow.
        object_type:
          type: string
          description: The type of objects associated with this workflow.
          example: payable
        policy_name:
          type: string
          description: The name of this workflow.
          example: Expense approval
        policy_description:
          type: string
          description: An arbitrary description of this workflow.
        workflow:
          type: array
          items:
            type: object
          description: A list of functions executed when the workflow is triggered. Functions are defined in the [Monite script](https://docs.monite.com/docs/monite-script) format.
          example:
            - call:
                method: Payables.request_approval_by_entity_user
                params:
                  entity_user_ids:
                    - 5f3196d2-48ce-4c1e-b29e-c3e5d1fb7a13
        trigger:
          type: object
          description: The trigger conditions for this workflow. Triggers are defined in the [Monite script](https://docs.monite.com/docs/monite-script) format.
          example:
            version: 1
            object_type: payable
            action: create
            currency: EUR
        action:
          allOf:
            - $ref: '#/components/schemas/ActionEnum'
          description: The workflow is triggered only when this action is performed on an object. This is the same value as `trigger.action`.
        created_at:
          type: string
          description: UTC date and time when this workflow was created. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
          format: date-time
        updated_at:
          type: string
          description: UTC date and time when this workflow was last updated. Timestamps follow the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
          format: date-time
      description: |-
        A Workflow object represents an approval policy for payable status transitions.
        Workflows are defined using the [Monite script](https://docs.monite.com/docs/monite-script).
        Each workflow consists of trigger conditions and the function calls executed when the workflow is triggered.
    WorkflowsPaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowResponseSchema'
          description: A paginated list of workflows.
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
    api__schemas__workflows__enums__WorkflowPipelineStatusEnum:
      enum:
        - in_progress
        - failed
        - done
        - pending
        - outdated
      type: string
      description: An enumeration.
    api__v1__approvals__pagination__CursorFields:
      enum:
        - updated_at
      type: string
      description: An enumeration.
    api__v1__export__pagination__CursorFields:
      enum:
        - created_at
      type: string
      description: An enumeration.
    api__v1__payables__pagination__CursorFields:
      enum:
        - id
        - amount
        - due_date
      type: string
      description: An enumeration.
    api__v1__todo__pagination__CursorFields:
      enum:
        - created_at
      type: string
      description: An enumeration.
    api__v1__workflows__pagination__CursorFields:
      enum:
        - created_at
      type: string
      description: An enumeration.
    biz__objects__workflows__enums__WorkflowPipelineStatusEnum:
      enum:
        - failed
        - done
        - pending
        - outdated
      type: string
      description: An enumeration.
    Account:
      required:
        - email
        - country
        - business_type
        - capabilities
        - company
      type: object
      properties:
        email:
          type: string
          format: email
        country:
          $ref: '#/components/schemas/AllowedCountriesCodes'
        business_type:
          $ref: '#/components/schemas/BusinessTypes'
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        company:
          $ref: '#/components/schemas/Company'
    AccountLinkResponse:
      required:
        - object
        - created
        - expires_at
        - url
        - id
      type: object
      properties:
        object:
          type: string
        created:
          type: integer
        expires_at:
          type: integer
        url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        id:
          type: string
    BusinessTypes:
      enum:
        - individual
        - company
        - non_profit
        - government_entity
      description: An enumeration.
    Capabilities:
      type: object
      properties:
        acss_debit_payments:
          type: boolean
        afterpay_clearpay_payments:
          type: boolean
        au_becs_debit_payments:
          type: boolean
        bacs_debit_payments:
          type: boolean
        bancontact_payments:
          type: boolean
        bank_transfer_payments:
          type: boolean
        boleto_payments:
          type: boolean
        card_issuing:
          type: boolean
        card_payments:
          type: boolean
        cartes_bancaires_payments:
          type: boolean
        eps_payments:
          type: boolean
        fpx_payments:
          type: boolean
        giropay_payments:
          type: boolean
        grabpay_payments:
          type: boolean
        ideal_payments:
          type: boolean
        jcb_payments:
          type: boolean
        klarna_payments:
          type: boolean
        konbini_payments:
          type: boolean
        legacy_payments:
          type: boolean
        oxxo_payments:
          type: boolean
        p24_payments:
          type: boolean
        paynow_payments:
          type: boolean
        sepa_debit_payments:
          type: boolean
        sofort_payments:
          type: boolean
        tax_reporting_us_1099_k:
          type: boolean
        tax_reporting_us_1099_misc:
          type: boolean
        transfers:
          type: boolean
        us_bank_account_ach_payments:
          type: boolean
    Company:
      type: object
      properties:
        name:
          type: string
        tax_id:
          type: string
        address:
          $ref: '#/components/schemas/CompanyAddress'
    CompanyAddress:
      type: object
      properties:
        city:
          type: string
        country:
          $ref: '#/components/schemas/AllowedCountriesCodes'
        line1:
          type: string
        line2:
          type: string
        postal_code:
          type: string
        state:
          type: string
    CreatePaymentLink:
      required:
        - amount
        - payment_reference
        - currency
        - payment_methods
        - account_id
      type: object
      properties:
        amount:
          minimum: 50
          exclusiveMinimum: true
          type: integer
          description: Amount must convert to at least 50 cents.
        payment_reference:
          type: string
        currency:
          minLength: 1
          type: string
          example: EUR
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodsEnum'
        cancel_url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
          example: https://example.com
        return_url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
          example: https://google.com
        payee:
          $ref: '#/components/schemas/PayeePayload'
        object:
          $ref: '#/components/schemas/Object'
        account_id:
          type: string
          description: account ID is used as on behalf of account
    Fee:
      required:
        - percentage
        - amount
      type: object
      properties:
        percentage:
          type: number
          format: verybig
        amount:
          type: integer
    Fees:
      required:
        - monite
        - partner
      type: object
      properties:
        monite:
          $ref: '#/components/schemas/Fee'
        partner:
          $ref: '#/components/schemas/Fee'
    Object:
      required:
        - id
        - type
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: deaef523-cfd7-48ce-9de9-6d280dca1d6c
        type:
          $ref: '#/components/schemas/ObjectTypeEnum'
    OnboardingPayload:
      required:
        - entity_id
        - refresh_url
        - return_url
        - account
      type: object
      properties:
        entity_id:
          type: string
          format: uuid
        refresh_url:
          maxLength: 2083
          minLength: 1
          type: string
          description: 'The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link’s URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user '
          format: uri
        return_url:
          maxLength: 2083
          minLength: 1
          type: string
          description: The URL that the user will be redirected to upon leaving or completing the linked flow
          format: uri
        account:
          $ref: '#/components/schemas/Account'
    PayPaymentLinkPayload:
      required:
        - payment_method
      type: object
      properties:
        payment_method:
          $ref: '#/components/schemas/PaymentMethodsEnum'
    PayeeAccountIdentificationPayload:
      required:
        - type
        - value
      type: object
      properties:
        type:
          type: string
          example: iban
        value:
          type: string
          example: AD1400080001001234567890
    PayeePayload:
      required:
        - name
        - account_identification
      type: object
      properties:
        name:
          type: string
        account_identification:
          $ref: '#/components/schemas/PayeeAccountIdentificationPayload'
    PaymentLinkResponse:
      required:
        - amount
        - payment_reference
        - currency
        - payment_methods
        - account_id
        - id
        - payment_page_url
      type: object
      properties:
        amount:
          minimum: 50
          exclusiveMinimum: true
          type: integer
          description: Amount must convert to at least 50 cents.
        payment_reference:
          type: string
        currency:
          minLength: 1
          type: string
          example: EUR
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodsEnum'
        cancel_url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
          example: https://example.com
        return_url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
          example: https://google.com
        payee:
          $ref: '#/components/schemas/PayeePayload'
        object:
          $ref: '#/components/schemas/Object'
        account_id:
          type: string
          description: account ID is used as on behalf of account
        id:
          type: string
          format: uuid
        payment_page_url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    PaymentMethodsCalculateFeePayload:
      required:
        - payment_link_id
      type: object
      properties:
        payment_link_id:
          type: string
          format: uuid
          example: deaef523-cfd7-48ce-9de9-6d280dca1d6c
    PaymentMethodsCalculateFeeResponse:
      required:
        - total
        - fee
      type: object
      properties:
        total:
          $ref: '#/components/schemas/Total'
        fee:
          $ref: '#/components/schemas/Fees'
    PaymentMethodsEnum:
      enum:
        - card
        - sepa_debit
        - eps
        - bancontact
        - giropay
      type: string
      description: An enumeration.
    Total:
      required:
        - fee
        - amount
      type: object
      properties:
        fee:
          type: integer
        amount:
          type: integer
    UpdateAccount:
      type: object
      properties:
        email:
          type: string
          format: email
        country:
          $ref: '#/components/schemas/AllowedCountriesCodes'
        business_type:
          $ref: '#/components/schemas/BusinessTypes'
        capabilities:
          $ref: '#/components/schemas/Capabilities'
        company:
          $ref: '#/components/schemas/UpdateCompany'
    UpdateCompany:
      type: object
      properties:
        name:
          type: string
        tax_id:
          type: string
    DocumentTypeEnum:
      enum:
        - receivable
      type: string
      description: An enumeration.
    LanguageEnum:
      enum:
        - EN
        - DE
      type: string
      description: An enumeration.
    ReceivableTemplateCreatePayload:
      required:
        - document_type
        - language
        - name
        - template_type
        - template
        - preview
      type: object
      properties:
        document_type:
          enum:
            - receivable
          type: string
        language:
          $ref: '#/components/schemas/LanguageEnum'
        name:
          type: string
        template_type:
          enum:
            - block
          type: string
        template:
          type: string
        preview:
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
    TemplateBaseResponse:
      required:
        - document_type
        - language
        - name
        - template_type
        - template
        - preview
        - id
        - created_at
        - updated_at
      type: object
      properties:
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        language:
          $ref: '#/components/schemas/LanguageEnum'
        name:
          type: string
        template_type:
          $ref: '#/components/schemas/TemplateTypeEnum'
        template:
          type: string
        preview:
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        blocks:
          type: array
          items:
            type: string
    TemplateCreatePayload:
      $ref: '#/components/schemas/ReceivableTemplateCreatePayload'
    TemplateListResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TemplateResponse'
    TemplateReceivableResponse:
      required:
        - document_type
        - language
        - name
        - template_type
        - template
        - preview
        - id
        - created_at
        - updated_at
        - blocks
      type: object
      properties:
        document_type:
          enum:
            - receivable
          type: string
        language:
          $ref: '#/components/schemas/LanguageEnum'
        name:
          type: string
        template_type:
          enum:
            - block
          type: string
        template:
          type: string
        preview:
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        blocks:
          type: array
          items:
            type: string
    TemplateResponse:
      anyOf:
        - $ref: '#/components/schemas/TemplateBaseResponse'
        - $ref: '#/components/schemas/TemplateReceivableResponse'
    TemplateTypeEnum:
      enum:
        - block
        - source_object
      type: string
      description: An enumeration.
    AddCustomTemplateSchema:
      required:
        - language_code
        - subject_template
        - body_template
        - template_name
      type: object
      properties:
        language_code:
          type: string
          description: Lowercase iso code of language
        subject_template:
          type: string
          description: Jinja2 compatible string with email subject
        body_template:
          type: string
          description: Jinja2 compatible string with email body
        template_name:
          type: string
          description: One of pre-defined names of emails. Should be validated with enum
    ContentResponse:
      required:
        - id
        - document_type
        - subject
        - body
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
          description: ID of email content
          format: uuid
        document_type:
          allOf:
            - $ref: '#/components/schemas/DocumentObjectTypeEnum'
          description: Document type of content
        subject:
          type: string
          description: Subject text of the content
        body:
          type: string
          description: Body text of the content
        name:
          type: string
          description: Name of the content
        created_at:
          type: string
          description: Content created date and time
          format: date-time
        updated_at:
          type: string
          description: Content updated date and time
          format: date-time
    CreateContentRequest:
      required:
        - document_type
        - subject
        - body
      type: object
      properties:
        document_type:
          allOf:
            - $ref: '#/components/schemas/DocumentObjectTypeEnum'
          description: Document type of content
        subject:
          type: string
          description: Subject text of the content
        body:
          type: string
          description: Body text of the content
        name:
          type: string
          description: Name of the content
    CustomTemplateDataSchema:
      required:
        - id
        - template_name
        - language_code
        - subject_template
        - body_template
        - created_at
        - updated_at
      type: object
      properties:
        id:
          type: string
          description: ID of email template
          format: uuid
        template_name:
          type: string
          description: Name of the template
        language_code:
          type: string
          description: ISO language code
        subject_template:
          type: string
          description: Jinja2 compatible email subject template
        body_template:
          type: string
          description: Jinja2 compatible email body template
        created_at:
          type: string
          description: Template created date and time
          format: date-time
        updated_at:
          type: string
          description: Template updated date and time
          format: date-time
    DocumentObjectTypeEnum:
      enum:
        - quote
        - invoice
        - discount_reminder
        - final_reminder
      type: string
      description: An enumeration.
    SystemTemplateDataSchema:
      required:
        - template_name
        - available_templates
      type: object
      properties:
        template_name:
          type: string
          description: Name of the template
        available_templates:
          type: array
          items:
            $ref: '#/components/schemas/TemplateDataSchema'
          description: Array of templates
    TemplateDataSchema:
      required:
        - language
        - subject_template
        - body_template
      type: object
      properties:
        language:
          type: string
          description: Lowercase language code [en, de]
        subject_template:
          type: string
          description: Jinja2 compatible email subject template
        body_template:
          type: string
          description: Jinja2 compatible email body template
    UpdateContentRequest:
      type: object
      properties:
        document_type:
          allOf:
            - $ref: '#/components/schemas/DocumentObjectTypeEnum'
          description: Document type of content
        subject:
          type: string
          description: Subject text of the content
        body:
          type: string
          description: Body text of the content
        name:
          type: string
          description: Name of the content
    UpdateCustomTemplateSchemaRequest:
      type: object
      properties:
        language_code:
          type: string
          description: Lowercase iso code of language
        subject_template:
          type: string
          description: Jinja2 compatible string with email subject
        body_template:
          type: string
          description: Jinja2 compatible string with email body
    CreateWebhookRequest:
      required:
        - object_type
        - url
      type: object
      properties:
        object_type:
          $ref: '#/components/schemas/ObjectType'
        url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    WebhookResponse:
      required:
        - id
        - attempts_before_disabling
        - url
        - response
        - requests_made_count
        - event_id
        - was_successful
      type: object
      properties:
        id:
          type: string
          format: uuid
        attempts_before_disabling:
          type: integer
        url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        response:
          type: string
        requests_made_count:
          type: integer
        event_id:
          type: string
          format: uuid
        was_successful:
          type: boolean
    WebhookSettingsByObjectTypePaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookSettingsResponse'
          description: A set of webhook settings of different types returned per page
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
    WebhookSettingsResponse:
      required:
        - id
        - object_type
        - url
      type: object
      properties:
        id:
          type: string
          format: uuid
        object_type:
          $ref: '#/components/schemas/ObjectType'
        url:
          type: string
    WebhookUpdateRequest:
      type: object
      properties:
        object_type:
          $ref: '#/components/schemas/ObjectType'
        url:
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    WebhooksPaginationResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookResponse'
          description: A set of webhooks returned per page
        prev_pagination_token:
          type: string
          description: optional querystring with pagination parameters, null if there is no page
        next_pagination_token:
          type: string
          description: 'optional querystring with pagination parameters, null if there is no page'
    api__v1__webhook_settings__callback__EventPayload:
      required:
        - object_id
        - object_type
        - action
        - name
      type: object
      properties:
        object_id:
          type: string
          format: uuid
        object_type:
          type: string
        action:
          type: string
        name:
          type: string
    api__v1__webhook_settings__pagination__CursorFields:
      enum:
        - created_at
        - updated_at
      type: string
      description: An enumeration.
    api__v1__webhooks__pagination__CursorFields:
      enum:
        - created_at
        - updated_at
      type: string
      description: An enumeration.
    DomainListResponse:
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DomainResponse'
    DomainRequest:
      required:
        - domain
      type: object
      properties:
        domain:
          type: string
        provider:
          allOf:
            - $ref: '#/components/schemas/EmailServiceProviderEnum'
          description: Email service provider
    DomainResponse:
      required:
        - id
        - partner_id
        - domain
        - status
        - provider
        - dns_records
      type: object
      properties:
        id:
          type: string
          description: Entry UUID
          format: uuid
        partner_id:
          type: string
          format: uuid
        domain:
          type: string
        status:
          type: string
        provider:
          type: string
        dns_records:
          type: object
    EmailServiceProviderEnum:
      enum:
        - mailgun
      type: string
      description: An enumeration.
    MailboxDataResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MailboxResponse'
    MailboxDomainRequest:
      required:
        - related_object_type
        - mailbox_full_address
      type: object
      properties:
        related_object_type:
          allOf:
            - $ref: '#/components/schemas/ObjectTypeEnum'
          description: 'Related object type: payable and so on'
        mailbox_full_address:
          type: string
    MailboxMultipleEntitiesRequest:
      required:
        - entity_ids
      type: object
      properties:
        entity_ids:
          type: array
          items:
            type: string
            format: uuid
    MailboxRequest:
      required:
        - related_object_type
      type: object
      properties:
        related_object_type:
          allOf:
            - $ref: '#/components/schemas/ObjectTypeEnum'
          description: 'Related object type: payable and so on'
    MailboxResponse:
      required:
        - id
        - entity_id
        - status
        - related_object_type
        - mailbox_name
        - mailbox_full_address
      type: object
      properties:
        id:
          type: string
          description: Mailbox UUID
          format: uuid
        entity_id:
          type: string
          description: UUID entity ID
          format: uuid
        status:
          type: string
        related_object_type:
          type: string
        mailbox_name:
          type: string
        mailbox_full_address:
          type: string
        belongs_to_mailbox_domain_id:
          type: string
          format: uuid
    VerifyResponse:
      required:
        - id
        - partner_id
        - domain
        - status
        - provider
      type: object
      properties:
        id:
          type: string
          description: Entry UUID
          format: uuid
        partner_id:
          type: string
          description: UUID of the API Partner
          format: uuid
        domain:
          type: string
        status:
          type: string
        provider:
          type: string
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
    BasicAuth:
      scheme: basic
      type: http
